import{Z as ve,a7 as W,_ as ge,e as k,a8 as K,g as ye,h as _e,i as B,o as I,c as C,a as t,b as M,C as S,D as F,w as L,F as z,r as j,a9 as A,t as N,Q as ke,aa as y,P as Y,O as we,p as xe,d as be,a5 as Q}from"./index-CS5ogquF.js";import{M as De}from"./ModelTitle-DHHmH2cO.js";import{s as Oe}from"./sectionDraw-CyLWD4I6.js";import{M as X}from"./modelRunner-BDG3s_OU.js";import"./mapbox-gl-draw-scmT4pwH.js";/* empty css                       */class ee{constructor(a,r){this.dom=a,this.dataInfo=r,this.newDataInfo=r,this.initChartIns()}resizeChart(){this.myChart.resize()}initChartIns(){this.myChart=ve(this.dom)}initGraphic(){console.log("init graphic");let a=this.dataInfo.pointData,r=this.dataInfo.thicknessData,l=this.dataInfo.lineData,o=this.getGraphicOption(a,r,l);this.myChart.setOption({graphic:o})}initBaseChart(a=!1){let r=this.dataInfo.lineData,l=this.dataInfo.pointData,o=this.dataInfo.thicknessData,n;a?n=this.getBaseOption(r,l,o):n=this.getBaseOption2(l,o),this.myChart.setOption(n)}getGraphicOption(a,r,l){var o=2e3;o=window.innerWidth||document.documentElement.clientWidth,o=o;let n=[];for(let i=0;i<a.length;i++){let p=a[i],w=i;n.push({type:"circle",x:this.myChart.convertToPixel("grid",p)[0],y:this.myChart.convertToPixel("grid",p)[1],shape:{r:15/2},invisible:!1,draggable:w>0&&w<a.length-1,style:{fill:"#ffb004d0",borderColor:"#25f0ff7e"},ondrag:W(this.onPointDragging,{dataIndex:w,pointData:a,lineData:l,chartIns:this}),ondragend:W(this.onPointDragEnd,{dataIndex:w,pointData:a,lineData:l,chartIns:this}),z:100})}for(let i=0;i<r.length;i++){let p=r[i],w=i;n.push({type:"rect",z:100,shape:{width:o,height:0},invisible:!0,position:[0,this.myChart.convertToPixel({yAxisId:"y"},p)],draggable:!0,style:{fill:"rgba(0, 0, 0, 1)",stroke:"rgba(0,0,0,1)",lineWidth:4},cursor:"move",ondrag:W(this.onLineDrag,{thicknessData:r,dataIndex:w,chartIns:this})})}return n}getBaseOption(a,r,l){let o=this.getMarkLineData(l);return{grid:{left:"3%",right:"4%",bottom:"10%",top:"10%",containLabel:!0},dataZoom:[],xAxis:{type:"value",min:0,max:"dataMax",name:"Station(m)",nameLocation:"middle",nameGap:25,nameTextStyle:{fontSize:20,fontWeight:"bold"}},yAxis:{type:"value",id:"y",min:-39,max:4,name:"Elevation(m)",nameLocation:"middle",nameGap:30,nameTextStyle:{fontSize:20,fontWeight:"bold"}},series:[{id:"line",type:"line",smooth:!1,data:a,symbol:"none",z:1,lineStyle:{color:"#746800",opacity:1,width:5},markLine:{animation:!1,symbol:["triangle","arrow"],data:o}},{id:"point",type:"scatter",smooth:!1,data:r,symbol:"circle",symbolSize:15,z:2,itemStyle:{color:"#0051ffa6",opacity:1,borderColor:"#25f0ff7e",borderWidth:2}}]}}getBaseOption2(a,r){console.log(a,r);let l=this.getMarkLineData(r);return{grid:{left:"3%",right:"4%",bottom:"10%",top:"10%",containLabel:!0},tooltip:{},dataZoom:[],xAxis:{type:"value",min:0,max:"dataMax",name:"Station(m)",nameLocation:"middle",nameGap:25,nameTextStyle:{fontSize:20,fontWeight:"bold"}},yAxis:{type:"value",id:"y",min:-39,max:8,name:"Elevation(m)",nameLocation:"middle",nameGap:30,nameTextStyle:{fontSize:20,fontWeight:"bold"}},series:[{id:"line-point",type:"line",smooth:!0,data:a,symbol:"circle",symbolSize:10,z:1,lineStyle:{color:"#746800",opacity:1,width:5},markLine:{animation:!1,symbol:["triangle","arrow"],data:l}}]}}getMarkLineData(a){let r=["#15ff00","#3700ff","#a200ff","#FF8E00","#009bb6"],l=[];return a.forEach((o,n)=>{let i={name:`Layer ${n+1}`,yAxis:o,lineStyle:{color:r[n],width:3},label:{show:!0,position:"insideEndBottom",fontSize:15,formatter:p=>`Layer ${n+1} -- `+Math.round(p.value*100)/100+" m"}};l.push(i)}),l}findAdjacentIndices(a,r){let l=0,o=a.length-1;for(;l<=o;){let n=Math.floor((l+o)/2);if(a[n][0]>r)o=n-1;else if(a[n][0]<r)l=n+1;else return[n,n]}return l>0?[l-1,l]:[-1,0]}getYFromLine(a,r,l,o,n){return a===l?n===a?r:(console.log("x1 === x2 && x !== x1"),null):r+(n-a)*((o-r)/(l-a))}onPointDragging(a){const{dataIndex:r,pointData:l,lineData:o,chartIns:n}=a;let i=n.myChart,p=i.convertFromPixel("grid",this.position),w=l[0],_=l[l.length-1],V=n.findAdjacentIndices(o,p[0]),T=o[V[0]],v=o[V[1]];if(p[0]<w[0]){let m=i.getOption().graphic[0].elements[r],b=i.convertToPixel("grid",w);m.x=b[0]+.1,m.y=b[1];let f=i.getOption();f.graphic[0].elements[r]=m,i.setOption(f)}else if(p[0]>_[0]){let m=i.getOption().graphic[0].elements[r],b=i.convertToPixel("grid",_);m.x=b[0]-.1,m.y=b[1];let f=i.getOption();f.graphic[0].elements[r]=m,i.setOption(f)}else{let m=n.getYFromLine(T[0],T[1],v[0],v[1],p[0]),b=i.getOption().graphic[0].elements[r];b.x=i.convertToPixel("grid",[p[0],m])[0],b.y=i.convertToPixel("grid",[p[0],m])[1];let f=i.getOption();f.graphic[0].elements[r]=b,i.setOption(f)}}onPointDragEnd(a){let r=a.chartIns.myChart,l=r.getOption().graphic[0].elements;for(let o=0;o<23;o++)a.chartIns.newDataInfo.pointData[o]=r.convertFromPixel("grid",[l[o].x,l[o].y])}onLineDrag(a){const{thicknessData:r,dataIndex:l}=a;let o=a.chartIns.myChart,n=o.convertFromPixel({yAxisId:"y"},this.position[1]);a.chartIns.newDataInfo.thicknessData[l]=n,(p=>{let w=a.chartIns.getMarkLineData(p);o.setOption({series:[{id:"line",markLine:{data:w}}]})})(a.chartIns.newDataInfo.thicknessData)}reset(){}onDataZoom(){console.log(this.newDataInfo);let a=this.myChart;(l=>{let o=a.getOption().graphic,n=o[0].elements;for(let i=0;i<23;i++){let p=a.convertToPixel("grid",l[i]);n[i].x=p[0],n[i].y=p[1]}o[0].elements=n,a.setOption({graphic:o})})(this.newDataInfo.pointData)}}const O=E=>(xe("data-v-ddfe41d1"),E=E(),be(),E),Ie={class:"stablityAnalysis-container"},Ce={class:"model-content-container"},Se={class:"model-run-container"},Me={class:"loading-container"},Le={class:"loading-message"},Ee={class:"tab-page-container"},Te={class:"model-run-content flex-coloum"},Re={class:"form-block flex-coloum"},Ne={class:"detail-bank-profile"},Ve=O(()=>t("div",{class:"title2"},"断面详情",-1)),Pe={class:"xz-table flex-row"},Be=ke('<div class="table head" data-v-ddfe41d1><div class="row" data-v-ddfe41d1><div class="cell head" data-v-ddfe41d1>Station(m)</div></div><div class="row" data-v-ddfe41d1><div class="cell head" data-v-ddfe41d1>Elevation(m)</div></div></div>',1),Fe={class:"table"},ze={class:"row"},Ae=["onUpdate:modelValue"],Ue={class:"row"},Ge=["onUpdate:modelValue"],Je={class:"second-row"},We={class:"soil-layer-profile flex-coloum"},je=O(()=>t("div",{class:"title2"},"土壤分层详情",-1)),$e={class:"content flex-row"},He={class:"keyValue flex-row"},Ze={class:"key"},qe=["onUpdate:modelValue"],Ke={class:"temp-block"},Ye=O(()=>t("div",{class:"title2"},"潮位参数配置",-1)),Qe={class:"content one-center"},Xe={class:"keyValue flex-row"},et=O(()=>t("div",{class:"key"},"elevation of Flow",-1)),tt={class:"right-block flex-coloum"},ot={class:"full-block flex-coloum",style:{"justify-content":"flex-start"}},at=O(()=>t("div",{class:"title2"},"断面信息录入",-1)),st={class:"content flex-coloum",style:{"align-items":"center","justify-content":"space-evenly"}},lt={class:"chart-block flex-row"},nt={class:"null-desc one-center"},it={class:"right-block flex-coloum"},rt={class:"result-container flex-coloum",style:{"align-items":"center"}},ct=O(()=>t("div",{class:"title2"}," 模型输出结果 ",-1)),dt={class:"content flex-coloum",style:{"align-items":"center"}},ut={class:"keyValue flex-coloum",style:{"margin-top":".2vh"}},pt=O(()=>t("div",{class:"key"},"剪切出现高程",-1)),ht={class:"value"},mt={class:"keyValue flex-coloum",style:{"margin-top":".2vh"}},ft=O(()=>t("div",{class:"key"},"剪切出现角度",-1)),vt={class:"value"},gt={class:"keyValue flex-coloum",style:{"margin-top":".2vh"}},yt=O(()=>t("div",{class:"key"},"稳定性指标",-1)),_t={class:"value"},kt={key:0,class:"main-content"},wt={class:"dialog-footer"},xt={__name:"SoilAnalysis5",setup(E){const a=k(null),r=k(null),l=k(2.8),o=k(!1),n=k("请完整配置参数后运行"),i=k(!0),p=k(!1),w=k(!1),_=K({see:0,ssa:0,fos:0}),V=k([]),T=k({});let v=null;const m=k([1.93,-4.07,-11.57,-26.57,-36.57]),b=["Layer 1","Layer 2","Layer 3","Layer 4","Layer 5"],f=k(new Array(23).fill(["0","0"])),te=(e,c)=>{console.log("beforeUpload",e,c);const s=e.type==="application/json";return s||!1},oe=(e,c)=>{const s=new FileReader;s.onload=d=>{try{let h=JSON.parse(d.target.result);T.value=h,y({position:"top-left",type:"success",title:"参数配置文件上传成功！",offset:130})}catch{y({position:"top-left",type:"error",message:"请上传正确的 JSON 文件！",title:"错误",offset:130})}},s.readAsText(e.raw)},ae=(e,c)=>{y({position:"top-left",type:"error",message:"文件超出限制，请上传正确的 JSON 文件！",title:"错误",offset:200})},se=(e,c)=>{console.log("============")};ye(T,async(e,c)=>{console.log("uploadJosn!!",e);const s=fe(e);console.log("result",s),l.value=s.flowElevation,m.value=s.thicknessData,f.value=s.pointData,v?(i.value=!1,setTimeout(()=>{const d=v.getBaseOption2(s.pointData,s.thicknessData);v.myChart.setOption(d)},1)):(i.value=!1,setTimeout(()=>{v=new ee(a.value,{});const d=v.getBaseOption2(s.pointData,s.thicknessData);v.myChart.setOption(d)},1))});const $=k([]),R=K({name:null,bankEnName:null}),le=async e=>{R.name=e.name,R.bankEnName=e.bankEnName;let c=(await Q.getBankCalculateResourceList("DEM",R.bankEnName)).data,s=Q.DEMResourcetoList(c);$.value=s,y({type:"success",title:"选择岸段",message:`已选择岸段——${R.name},模型计算将采用该岸段相关资源`,position:"top-left",offset:180})},H=e=>{if(e=="file")console.log("file input");else if(e=="map"){if(console.log("map input"),R.name==null){y({position:"top-left",type:"info",message:"请先选择岸段",title:"警告",offset:130});return}p.value=!0}_.see=0,_.ssa=0,_.fos=0};let U=k(null),G=k(null);const ne=e=>{console.log(" i got geojson !!",e),G.value=e},ie=e=>{U.value=e},re=async e=>{console.log("section view model run"),o.value=!0,n.value="正在计算断面形态";let c="/model/taskNode/start/riverbedEvolution/calculateSectionView";const s=new X(c,e),d=await s.modelStart().catch(()=>{o.value=!1,n.value="",y({position:"top-left",type:"error",title:"断面形态计算模型启动失败",offset:130})});console.log("task id",d,s.taskId);let h=setInterval(async()=>{const g=await s.getRunningStatus();switch(console.log("status",g),g){case"RUNNING":case"LOCK":case"UNLOCK":break;case"COMPLETE":clearInterval(h);const u=await s.getModelResult();console.log("result",u);let x=u["raw-json"];const D=await s.getModelResultFile(x,"json").catch(J=>{y({position:"top-left",offset:130,type:"error",title:"错误",message:"断面形态计算完毕，但获取断面信息失败！"}),console.log(J)});console.log("section json",D),s.sectionJson=D,Z=D,o.value=!1,n.value="",y({position:"top-left",type:"success",message:"计算断面形态成功",title:"成功",offset:130}),i.value=!1,setTimeout(()=>{he(),v.myChart.resize()},100);break;case"ERROR":clearInterval(h);let P=await s.getErrorLog();console.log("error",P),o.value=!1,n.value="",y({position:"top-left",type:"error",message:`计算断面形态失败,
`+P,title:"错误",offset:130});break}},1e3)};let Z=null;const ce=()=>{p.value=!0;let e={"dem-id":U.value,"section-geometry":G.value};(e["dem-id"]==null||e["section-geometry"]==null?(y({position:"top-left",type:"warning",message:"请完成断面绘制和地形选择",title:"警告",offset:130}),!1):!0)&&(re(e),setTimeout(()=>{p.value=!1},500))},de=e=>e.length===0?-1:e.reduce((c,s,d,h)=>s<h[c]?d:c,0),ue=async()=>{let e={"dem-id":U.value,"section-geometry":G.value,"x-values":f.value.map(s=>Math.round(s[0]*1e3)/1e3),"z-values":f.value.map(s=>Math.round(s[1]*1e3)/1e3),"index-toe":de(f.value.map(s=>Math.round(s[1]*1e3)/1e3)),"flow-elevation":l.value,"bank-layer-thickness":m.value};if(l.value==null||l.value==""?(y({position:"top-left",type:"warning",message:"请完整配置参数后运行",title:"警告",offset:130}),!1):!0){o.value=!0,n.value="正在执行土地变形分析模型",y({position:"top-left",type:"info",message:"执行土地变形分析模型",title:"提示",offset:130});let s="/model/taskNode/start/erosionModel/calculateBSTEM";const d=new X(s,e),h=await d.modelStart().catch(()=>{o.value=!1,n.value="",y({position:"top-left",type:"error",title:"土体变形分析模型启动失败",offset:130})});console.log("task id",h,d.taskId);let g=setInterval(async()=>{const u=await d.getRunningStatus();switch(console.log("status",u),u){case"RUNNING":break;case"COMPLETE":clearInterval(g);const x=await d.getModelResult();console.log("fos result",x);let D=Number.parseFloat(x.fos),P=Number.parseFloat(x.see),J=Number.parseFloat(x.ssa);_.fos=D,_.see=P,_.ssa=J,o.value=!1,n.value="",y({position:"top-left",type:"success",message:"土地变形分析模型执行成功",title:"成功",offset:130});break;case"ERROR":clearInterval(g);let q=d.getErrorLog();console.log("error",q),o.value=!1,n.value="",y({position:"top-left",type:"error",message:`土地变形分析模型执行失败,
`+q,title:"错误",offset:130});break}},1e3)}},pe=()=>{_.see=0,_.ssa=0,_.fos=0;let e=v.getBaseOption2(f.value,m.value);v.myChart.setOption(e)},he=()=>{let e=me(Z),c=e.thicknessData.sort((d,h)=>h-d),s=e.pointData.sort((d,h)=>d[0]-h[0]);if(m.value=c.map(d=>Math.round(d*1e3)/1e3),f.value=s.map(d=>[Math.round(d[0]*1e3)/1e3,Math.round(d[1]*1e3)/1e3]),v){let d=v.getBaseOption2(f.value,m.value);v.myChart.setOption(d)}else v=new ee(a.value,{pointData:e.pointData,thicknessData:e.thicknessData,lineData:e.lineData}),v.initBaseChart(!1)};_e(async()=>{});const me=e=>{console.log("origin",e);const c=[],s=e.step,d=[],h=e.step_er;for(let g=0;g<e.points.length;g++){let u=e.points[g];c.push([s*g,u[2]])}s*e.deepest_index-(e.points_er.length-1)*h;for(let g=0;g<e.points_er.length;g++){let u=e.points_er[g];d.push([g*h,u[2]])}return{lineData:c,pointData:d,thicknessData:[1.93,-4.07,-11.57,-26.57,-36.57]}},fe=e=>{try{let c=[],s=[];for(let h=0;h<23;h++)c.push([e["x-values"][h],e["z-values"][h]]);s=e.thickness;let d=e["flow-elevation"];return y({position:"top-left",type:"success",message:"参数配置文件解析完毕",title:"成功",offset:200}),{pointData:c,thicknessData:s,flowElevation:d}}catch{y({position:"top-left",type:"error",message:"解析失败，请上传正确的 JSON 文件！",title:"错误",offset:200})}};return(e,c)=>{const s=B("dv-loading"),d=B("el-upload"),h=B("el-button"),g=B("el-dialog");return I(),C(z,null,[t("div",Ie,[M(De,{ModelName:"土体变形分析模型",onConfirmBank:le}),t("div",Ce,[t("div",Se,[S(t("div",Me,[M(s,{class:"loading-icon"},{default:L(()=>[t("div",Le,N(n.value),1)]),_:1})],512),[[F,o.value]]),t("div",Ee,[t("div",Te,[t("div",Re,[t("div",Ne,[Ve,t("div",Pe,[Be,t("div",Fe,[t("div",ze,[(I(!0),C(z,null,j(f.value,(u,x)=>S((I(),C("input",{type:"number",class:"cell","onUpdate:modelValue":D=>u[0]=D,key:x},null,8,Ae)),[[A,u[0]]])),128))]),t("div",Ue,[(I(!0),C(z,null,j(f.value,(u,x)=>S((I(),C("input",{type:"number",class:"cell","onUpdate:modelValue":D=>u[1]=D,key:x},null,8,Ge)),[[A,u[1]]])),128))])])])]),t("div",Je,[t("div",We,[je,t("div",$e,[(I(),C(z,null,j(5,u=>t("div",He,[t("div",Ze,N(b[u-1]),1),S((I(),C("input",{type:"number",class:"value",key:u,"onUpdate:modelValue":x=>m.value[u-1]=x},null,8,qe)),[[A,m.value[u-1]]])])),64))])]),t("div",Ke,[Ye,t("div",Qe,[t("div",Xe,[et,S(t("input",{type:"number",class:"value",placeholder:"请输入潮位","onUpdate:modelValue":c[0]||(c[0]=u=>l.value=u)},null,512),[[A,l.value]])])])])]),t("div",tt,[t("div",ot,[at,t("div",st,[M(d,{class:"upload-demo","file-list":V.value,"before-upload":te,"on-change":oe,limit:1,"on-exceed":ae,"http-request":se,"show-file-list":!1},{default:L(()=>[t("div",{class:"button one-center",onClick:c[1]||(c[1]=u=>H("file"))}," 文件导入 ")]),_:1},8,["file-list"]),t("div",{class:"button one-center",onClick:c[2]||(c[2]=u=>H("map"))}," 地图绘制 ")])])])]),t("div",lt,[S(t("div",nt,"请录入断面和土壤分层参数信息！",512),[[F,i.value]]),S(t("div",{class:"redraw-button one-center",onClick:pe}," 重绘图表",512),[[F,!i.value]]),S(t("div",{ref_key:"chartdom",ref:a,id:"chart"},null,512),[[F,!i.value]]),t("div",it,[t("div",{class:"run-container one-center"},[t("div",{class:"run-button one-center",onClick:ue}," 运行模型 ")]),t("div",rt,[ct,t("div",dt,[t("div",ut,[pt,t("div",ht,N(_.see.toFixed(3)+" m"),1)]),t("div",mt,[ft,t("div",vt,N(_.ssa.toFixed(3)+" °"),1)]),t("div",gt,[yt,t("div",_t,N(_.fos.toFixed(3)),1)])])])])])])])])])]),M(g,{modelValue:p.value,"onUpdate:modelValue":c[4]||(c[4]=u=>p.value=u),title:"地图选择",width:"41.5vw",onOpened:c[5]||(c[5]=u=>w.value=!0)},{footer:L(()=>[t("div",wt,[M(h,{onClick:c[3]||(c[3]=u=>p.value=!1)},{default:L(()=>[Y("取消")]),_:1}),M(h,{type:"primary",onClick:ce},{default:L(()=>[Y(" 计算断面形态 ")]),_:1})])]),default:L(()=>[w.value?(I(),C("div",kt,[M(Oe,{ref_key:"sectionDrawRef",ref:r,onSectionDraw:ne,onDemSelect:ie,demResources:$.value},null,8,["demResources"])])):we("",!0)]),_:1},8,["modelValue"])],64)}}},Mt=ge(xt,[["__scopeId","data-v-ddfe41d1"]]);export{Mt as default};
