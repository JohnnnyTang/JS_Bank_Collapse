const __vite__fileDeps=["assets/riskResult-C1Q3F4r5.js","assets/index-DCmoMezX.js","assets/index-CFRf1F3o.css","assets/riskResult-ATSSiHG3.css","assets/flowspeedInfo-D8b0ASot.js","assets/util-CdhLeOup.js","assets/flowspeedInfo-BKHeoSfn.css","assets/profileInfo-Cv9DhRko.js","assets/profileInfo-V_w5SQ9g.css","assets/profileShapeCompare-BPRY1jRO.js","assets/profileShapeCompare-BlwgbW8Y.css","assets/profileSlope-WqPd5kNL.js","assets/profileSlope-BElbQp6g.css","assets/profileErosion-zXHmdO67.js","assets/profileErosion-CF4DUzMW.css","assets/BedFlowChart-96aI7_WW.js","assets/BedFlowChart-CVy3bx83.css","assets/WaterProcessChart-CipewoU8.js","assets/WaterProcessChart-_RqpagCP.css","assets/GeologyAndProject-CGiTYwxC.js","assets/GeologyAndProject-BdX_dTSd.css"],__vite__mapDeps=i=>i.map(i=>__vite__fileDeps[i]);
import{b8 as Zt,b9 as lt,aY as Kt,v as te,ai as qt,g as Fe,h as xt,i as I,o as S,c as P,b as w,d as U,a as c,t as xe,b2 as Be,_ as Tt,J as ut,f as u,ag as Qt,x as fe,z as gt,A as ea,j as Ie,k as X,O as A,D as me,u as C,B as ze,C as dt,a1 as bt,a9 as ct,w as ht,p as ta,e as aa,ba as j,aa as Le,aR as G}from"./index-DCmoMezX.js";import"./index-agGbjeUf.js";import{M as ra}from"./mapbox-gl-draw-GrdYQAuW.js";function ia(a=5){function e(d,E){return[(d[0]+E[0])/2,(d[1]+E[1])/2]}const r=[],s=[],t=new Map;function n(d){const E=d.join("-");return t.has(E)||t.set(E,s.length/2),s.push(d[0]),s.push(d[1]),d}const h=n([0,1]),o=n([0,0]),v=n([1,1]),b=n([1,0]),F={fst:h,snd:o,ted:b,level:0},x={fst:b,snd:v,ted:h,level:0},L=[];L.push(F),L.push(x);const D=[];for(;L.length;){const d=L.pop(L);if(d.level>=a){D.push(d);continue}const E=d.fst,_=d.snd,z=d.ted,K=n(e(E,z));L.push({fst:E,snd:K,ted:_,level:d.level+.5}),L.push({fst:z,snd:K,ted:_,level:d.level+.5})}return D.forEach(d=>{const E=d.fst.join("-"),_=d.snd.join("-"),z=d.ted.join("-");r.push(t.get(E)),r.push(t.get(_)),r.push(t.get(z))}),{positions:s,indices:r}}class Ve{constructor(e=0,r=0,s=void 0){this.parent=s,this.level=e,this.id=r,this.size=180/Math.pow(2,e);const t=this.id%4,n=(this.parent?this.parent.bBox.boundary.x:-180)+t%2*this.size,h=n+this.size,o=(this.parent?this.parent.bBox.boundary.y:-90)+Math.floor(t/2)*this.size,v=o+this.size;this.bBox=new Zt(n,o,h,v),this.children=[]}release(){return this.bBox=this.bBox.release(),this.children=null,this.parent=null,this.level=null,this.size=null,this.id=null,null}isSubdividable(e){const r=this.bBox.center,s=Math.ceil(Math.abs(r[0]-e.cameraPos[0])/this.size),t=Math.ceil(Math.abs(r[1]-e.cameraPos[1])/this.size);return Math.max(s,t)<=2}}class oa{constructor(e){this.type="custom",this.map=void 0,this.id="TerrainLayer",this.renderingMode="3d",this.asLine=!1,this.nodeCount=0,this.maxLevel=e,this.maxNodeCount=1e3,this.sectorSize=32,this.sectorRange=[0,0],this.exaggeration=50,this.tileBox=lt(),this.lodMapSize=[512,512],this.visibleNodeLevel=[0,this.maxLevel],this.elevationRange=[-80.06899999999999,4.3745],this.boundaryCondition=lt(120.04373606134682,31.173901952209487,121.96623240116922,32.08401085804678),this.nodeLevelArray=new Uint32Array(this.maxNodeCount),this.nodeBoxArray=new Float32Array(this.maxNodeCount*4),this.interval=5,this.color=[0,0,0],this.indexNum=0}onAdd(e,r){this.map=e;const{positions:s,indices:t}=ia(Math.log2(this.sectorSize));this.positionArray=new Float32Array(s),this.indexNum=t.length,this.indexTextureSize=Math.ceil(Math.sqrt(t.length)),this.positionTextureSize=Math.ceil(Math.sqrt(s.length/2)),this.indexTextureArray=new Uint32Array(this.indexTextureSize*this.indexTextureSize),t.forEach((v,b)=>{this.indexTextureArray[b]=v}),this.positionTextureArray=new Float32Array(this.positionTextureSize*this.positionTextureSize*2),s.forEach((v,b)=>{this.positionTextureArray[b]=v});const n=new Kt,h=n.addFolder("Contour");h.add(this,"interval",.1,20).onChange(()=>this.map.triggerRepaint()),h.addColor(this,"color").onChange(()=>this.map.triggerRepaint()),h.open();const o=n.addFolder("Terrain");o.add(this,"asLine",!1).onChange(()=>this.map.triggerRepaint()),o.add(this,"exaggeration",1,100).onChange(()=>this.map.triggerRepaint()),o.add(this,"maxLevel",14,20,1).onChange(()=>this.map.triggerRepaint()),o.open(),n.hide(),this.init(r)}async init(e){this.isInitialized=!1,sa(e),this.canvasWidth=e.canvas.width,this.canvasHeight=e.canvas.height,this.normalShader=await pe(e,"/scratchSomething/terrainWebGL/shader/normal.glsl"),this.lodMapShader=await pe(e,"/scratchSomething/terrainWebGL/shader/lodMap.glsl"),this.dLodMapShader=await pe(e,"/scratchSomething/terrainWebGL/shader/dLodMap.glsl"),this.terrainLineShader=await pe(e,"/scratchSomething/terrainWebGL/shader/terrainMeshLine.glsl"),this.terrainMeshShader=await pe(e,"/scratchSomething/terrainWebGL/shader/terrainMesh.glsl"),this.terrainShader=this.asLine?this.terrainLineShader:this.terrainMeshShader,this.showShader=await pe(e,"/scratchSomething/terrainWebGL/shader/terrainLayer.glsl");const r=await mt("/scratchSomething/terrainWebGL/image/dem.png"),s=await mt("/scratchSomething/terrainWebGL/image/contourPalette1D.png");this.demTexture=M(e,r.width,r.height,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,r),this.paletteTexture=M(e,s.width,s.height,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,s),this.boxTexture=M(e,this.nodeBoxArray.length/4,1,e.RGBA32F,e.RGBA,e.FLOAT,this.nodeBoxArray),this.levelTexture=M(e,this.nodeLevelArray.length,1,e.R32UI,e.RED_INTEGER,e.UNSIGNED_INT,this.nodeLevelArray),this.indexTexture=M(e,this.indexTextureSize,this.indexTextureSize,e.R32UI,e.RED_INTEGER,e.UNSIGNED_INT,this.indexTextureArray),this.positionTexture=M(e,this.positionTextureSize,this.positionTextureSize,e.RG32F,e.RG,e.FLOAT,this.positionTextureArray),this.normalTexture=M(e,r.width,r.height,e.RGB8,e.RGB,e.UNSIGNED_BYTE);const t=Ue(e,[this.normalTexture]);e.bindFramebuffer(e.FRAMEBUFFER,t),e.viewport(0,0,r.width,r.height),e.clearColor(0,0,0,0),e.clear(e.COLOR_BUFFER_BIT),e.useProgram(this.normalShader),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,this.demTexture),e.uniform1i(e.getUniformLocation(this.normalShader,"demTexture"),0),e.uniform1f(e.getUniformLocation(this.normalShader,"exaggeration"),this.exaggeration),e.uniform2fv(e.getUniformLocation(this.normalShader,"e"),new Float32Array(this.elevationRange)),e.drawArrays(e.TRIANGLE_STRIP,0,4),this.lodMapTexture=M(e,this.lodMapSize[0],this.lodMapSize[1],e.R32UI,e.RED_INTEGER,e.UNSIGNED_INT),this.dLodMapTexture=M(e,this.lodMapSize[0],this.lodMapSize[1],e.R32UI,e.RED_INTEGER,e.UNSIGNED_INT),this.layerDepthTexture=M(e,this.canvasWidth,this.canvasHeight,e.DEPTH_COMPONENT24,e.DEPTH_COMPONENT,e.UNSIGNED_INT),this.layerTexture=M(e,this.canvasWidth,this.canvasHeight,e.RGBA32F,e.RGBA,e.FLOAT),this.layerTextureMaxMipLevel=ua(this.canvasWidth,this.canvasHeight),this.layerRenderBuffer=na(e,this.canvasWidth,this.canvasHeight),this.lodMapPass=Ue(e,[this.lodMapTexture]),this.dLodMapPass=Ue(e,[this.dLodMapTexture]),this.layerPass=Ue(e,[this.layerTexture],this.layerDepthTexture),this.isInitialized=!0}render(e,r){if(!this.isInitialized)return;this.map.update(),this.registerRenderableNode({cameraPos:this.map.mercatorCenter.toLngLat().toArray(),cameraBounds:this.map.cameraBounds,zoomLevel:this.map.getZoom()}),ft(e,this.boxTexture,this.nodeBoxArray.length/4,1,e.RGBA32F,e.RGBA,e.FLOAT,this.nodeBoxArray),ft(e,this.levelTexture,this.nodeLevelArray.length,1,e.R32UI,e.RED_INTEGER,e.UNSIGNED_INT,this.nodeLevelArray),e.bindFramebuffer(e.FRAMEBUFFER,this.lodMapPass),e.viewport(0,0,this.lodMapSize[0],this.lodMapSize[1]);const s=new Uint32Array([0,0,0,0]);e.clearBufferuiv(e.COLOR,0,s),e.useProgram(this.lodMapShader),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,this.boxTexture),e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,this.levelTexture),e.uniform1i(e.getUniformLocation(this.lodMapShader,"boxTexture"),0),e.uniform1i(e.getUniformLocation(this.lodMapShader,"levelTexture"),1),e.uniform2fv(e.getUniformLocation(this.lodMapShader,"dimensions"),new Float32Array(this.lodMapSize)),e.uniform2fv(e.getUniformLocation(this.lodMapShader,"sectorRange"),new Float32Array(this.sectorRange)),e.uniform4fv(e.getUniformLocation(this.lodMapShader,"tileBox"),new Float32Array(this.tileBox.boundary.xyzw)),e.drawArraysInstanced(e.TRIANGLE_STRIP,0,4,this.nodeCount),e.bindFramebuffer(e.FRAMEBUFFER,this.dLodMapPass),e.viewport(0,0,this.lodMapSize[0],this.lodMapSize[1]),e.clearBufferuiv(e.COLOR,0,new Uint32Array([0,0,0,0])),e.useProgram(this.dLodMapShader),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,this.lodMapTexture),e.uniform1i(e.getUniformLocation(this.lodMapShader,"lodMap"),0),e.drawArrays(e.TRIANGLE_STRIP,0,4),this.terrainShader=this.asLine?this.terrainLineShader:this.terrainMeshShader,e.bindFramebuffer(e.FRAMEBUFFER,this.layerPass),e.viewport(0,0,this.canvasWidth,this.canvasHeight),e.clearColor(1e3,0,0,0),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT),e.enable(e.DEPTH_TEST),e.disable(e.BLEND),e.useProgram(this.terrainShader),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,this.indexTexture),e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,this.positionTexture),e.activeTexture(e.TEXTURE2),e.bindTexture(e.TEXTURE_2D,this.levelTexture),e.activeTexture(e.TEXTURE3),e.bindTexture(e.TEXTURE_2D,this.boxTexture),e.activeTexture(e.TEXTURE4),e.bindTexture(e.TEXTURE_2D,this.dLodMapTexture),e.activeTexture(e.TEXTURE5),e.bindTexture(e.TEXTURE_2D,this.demTexture),e.activeTexture(e.TEXTURE6),e.bindTexture(e.TEXTURE_2D,this.normalTexture),e.uniform1i(e.getUniformLocation(this.terrainShader,"indicesTexture"),0),e.uniform1i(e.getUniformLocation(this.terrainShader,"positionsTexture"),1),e.uniform1i(e.getUniformLocation(this.terrainShader,"levelTexture"),2),e.uniform1i(e.getUniformLocation(this.terrainShader,"boxTexture"),3),e.uniform1i(e.getUniformLocation(this.terrainShader,"dLodMap"),4),e.uniform1i(e.getUniformLocation(this.terrainShader,"demTexture"),5),e.uniform1i(e.getUniformLocation(this.terrainShader,"normalTexture"),6),e.uniform1f(e.getUniformLocation(this.terrainShader,"sectorSize"),this.sectorSize),e.uniform1f(e.getUniformLocation(this.terrainShader,"worldSize"),this.map.WORLD_SIZE),e.uniform1f(e.getUniformLocation(this.terrainShader,"exaggeration"),this.exaggeration),e.uniform2fv(e.getUniformLocation(this.terrainShader,"centerHigh"),this.map.centerHigh),e.uniform2fv(e.getUniformLocation(this.terrainShader,"centerLow"),this.map.centerLow),e.uniform1f(e.getUniformLocation(this.terrainShader,"maxLodLevel"),this.maxVisibleNodeLevel),e.uniform1f(e.getUniformLocation(this.terrainShader,"maxMipLevel"),this.layerTextureMaxMipLevel),e.uniform2fv(e.getUniformLocation(this.terrainShader,"e"),new Float32Array(this.elevationRange)),e.uniform2fv(e.getUniformLocation(this.terrainShader,"sectorRange"),new Float32Array(this.sectorRange)),e.uniform4fv(e.getUniformLocation(this.terrainShader,"tileBox"),new Float32Array(this.tileBox.boundary.xyzw)),e.uniform4fv(e.getUniformLocation(this.terrainShader,"terrainBox"),new Float32Array(this.boundaryCondition.boundary.xyzw)),e.uniformMatrix4fv(e.getUniformLocation(this.terrainShader,"uMatrix"),!1,this.map.relativeEyeMatrix),this.asLine?e.drawArraysInstanced(e.LINES,0,this.indexNum/3*6,this.nodeCount):e.drawArraysInstanced(e.TRIANGLES,0,this.indexNum,this.nodeCount),e.bindFramebuffer(e.FRAMEBUFFER,null),e.viewport(0,0,e.canvas.width,e.canvas.height),e.disable(e.DEPTH_TEST),e.enable(e.BLEND),e.blendFunc(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA),e.useProgram(this.showShader),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,this.layerTexture),e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,this.paletteTexture),e.activeTexture(e.TEXTURE2),e.bindTexture(e.TEXTURE_2D,this.layerDepthTexture),e.activeTexture(e.TEXTURE3),e.bindTexture(e.TEXTURE_2D,this.normalTexture),e.activeTexture(e.TEXTURE4),e.bindTexture(e.TEXTURE_2D,this.lodMapTexture),e.uniform1i(e.getUniformLocation(this.showShader,"srcTexture"),0),e.uniform1i(e.getUniformLocation(this.showShader,"paletteTexture"),1),e.uniform1i(e.getUniformLocation(this.showShader,"depthTexture"),2),e.uniform1i(e.getUniformLocation(this.showShader,"normalTexture"),3),e.uniform1i(e.getUniformLocation(this.showShader,"lodMapTexture"),4),e.uniform1f(e.getUniformLocation(this.showShader,"interval"),this.interval),e.uniform1f(e.getUniformLocation(this.showShader,"asLine"),this.asLine?1:0),e.uniform1f(e.getUniformLocation(this.showShader,"maxMipLevel"),this.layerTextureMaxMipLevel),e.uniform2fv(e.getUniformLocation(this.showShader,"e"),new Float32Array(this.elevationRange)),e.uniform3fv(e.getUniformLocation(this.showShader,"contourColor"),new Float32Array(this.color)),e.drawArrays(e.TRIANGLE_STRIP,0,4);const t=e.getError();t!==e.NO_ERROR&&console.error("Error happened: ",la(e,t))}registerRenderableNode(e){this.tileBox.reset(),this.sectorRange.fill(0),this.nodeCount=0,this.maxVisibleNodeLevel=0,this.minVisibleNodeLevel=this.maxLevel;const r=[],s=[];for(r.push(new Ve(0,0)),r.push(new Ve(0,1));r.length>0;){let t=r.pop();if(t.bBox.overlap(this.boundaryCondition)){if(!t.isSubdividable(e)||t.level>=Math.min(this.maxLevel,e.zoomLevel)){s.push(t),t.level>this.maxVisibleNodeLevel&&(this.sectorRange[0]=t.bBox.size[0],this.sectorRange[1]=t.bBox.size[1],this.maxVisibleNodeLevel=t.level);continue}for(let n=0;n<4;n++)t.children[n]=new Ve(t.level+1,4*t.id+n,t),r.push(t.children[n])}}s.forEach(t=>{(this.nodeCount<this.maxNodeCount||t.level+5>=this.maxVisibleNodeLevel)&&(this.minVisibleNodeLevel=t.level<this.minVisibleNodeLevel?t.level:this.minVisibleNodeLevel,this.tileBox.updateByBox(t.bBox),this.nodeLevelArray[this.nodeCount]=t.level,this.nodeBoxArray[this.nodeCount*4+0]=t.bBox.boundary.x,this.nodeBoxArray[this.nodeCount*4+1]=t.bBox.boundary.y,this.nodeBoxArray[this.nodeCount*4+2]=t.bBox.boundary.z,this.nodeBoxArray[this.nodeCount*4+3]=t.bBox.boundary.w,this.nodeCount++),t.release()})}}function sa(a){a.getSupportedExtensions().forEach(r=>{a.getExtension(r)})}async function pe(a,e){let r="";await te.get(e).then(o=>r+=o.data);const s=h(a,r,a.VERTEX_SHADER),t=h(a,r,a.FRAGMENT_SHADER),n=a.createProgram();return a.attachShader(n,s),a.attachShader(n,t),a.linkProgram(n),a.getProgramParameter(n,a.LINK_STATUS)||console.error("An error occurred linking shader stages: "+a.getProgramInfoLog(n)),n;function h(o,v,b){const F=`#version 300 es
`,x=o.createShader(b);return b===o.VERTEX_SHADER?v=F+`#define VERTEX_SHADER
`+v:b===o.FRAGMENT_SHADER&&(v=F+`#define FRAGMENT_SHADER
`+v),o.shaderSource(x,v),o.compileShader(x),o.getShaderParameter(x,o.COMPILE_STATUS)?x:(console.error("An error occurred compiling the shader module: "+o.getShaderInfoLog(x)),o.deleteShader(x),null)}}function Ue(a,e,r,s){const t=a.createFramebuffer();return a.bindFramebuffer(a.FRAMEBUFFER,t),e?.forEach((n,h)=>{a.framebufferTexture2D(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0+h,a.TEXTURE_2D,n,0)}),r&&a.framebufferTexture2D(a.FRAMEBUFFER,a.DEPTH_ATTACHMENT,a.TEXTURE_2D,r,0),a.bindFramebuffer(a.FRAMEBUFFER,null),a.checkFramebufferStatus(a.FRAMEBUFFER)!==a.FRAMEBUFFER_COMPLETE&&console.error("Framebuffer is not complete"),t}function M(a,e,r,s,t,n,h,o=!1){const v=a.createTexture();return a.bindTexture(a.TEXTURE_2D,v),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_S,a.CLAMP_TO_EDGE),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_T,a.CLAMP_TO_EDGE),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,o?a.LINEAR_MIPMAP_LINEAR:a.NEAREST),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MAG_FILTER,a.NEAREST),a.texImage2D(a.TEXTURE_2D,0,s,e,r,0,t,n,h||null),a.bindTexture(a.TEXTURE_2D,null),v}function ft(a,e,r,s,t,n,h,o){a.bindTexture(a.TEXTURE_2D,e),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_S,a.CLAMP_TO_EDGE),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_T,a.CLAMP_TO_EDGE),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,a.NEAREST),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MAG_FILTER,a.NEAREST),a.texImage2D(a.TEXTURE_2D,0,t,r,s,0,n,h,o),a.bindTexture(a.TEXTURE_2D,null)}function na(a,e,r){const s=e||a.canvas.width*window.devicePixelRatio,t=r||a.canvas.height*window.devicePixelRatio,n=a.createRenderbuffer();return a.bindRenderbuffer(a.RENDERBUFFER,n),a.renderbufferStorage(a.RENDERBUFFER,a.DEPTH_STENCIL,s,t),a.bindRenderbuffer(a.RENDERBUFFER,null),n}function la(a,e){switch(e){case a.NO_ERROR:return"NO_ERROR";case a.INVALID_ENUM:return"INVALID_ENUM";case a.INVALID_VALUE:return"INVALID_VALUE";case a.INVALID_OPERATION:return"INVALID_OPERATION";case a.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case a.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"UNKNOWN_ERROR"}}async function mt(a){try{const e=await fetch(a);if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);const r=await e.blob();return await createImageBitmap(r,{imageOrientation:"flipY",premultiplyAlpha:"none",colorSpaceConversion:"default"})}catch(e){throw console.error(`Error loading image (url: ${a})`,e),e}}function ua(a,e){return Math.floor(Math.log2(Math.max(a,e)))}const da="/down_triangle.png",ca="/rasterLegend1.png",Z=te.create({baseURL:"/api"});class ee{static runProfileModelTest=e=>{const r=`/taskNode/start/multi/default/section/${e-1}`;return Z.post(r)};static getProfileDataTest=e=>{const r=e<10?`/fileData/json/jsonStr/name/multiWholeRes-JC0${e}/newest`:`/fileData/json/jsonStr/name/multiWholeRes-JC${e}/newest`;return Z.get(r)};static runProfileModel_short=(e,r,s)=>{const t=`/taskNode/start/multi/default/section/${s-1}/beg/${e}/end/${r}`;return Z.post(t)};static runProfileModel_long=(e,r,s)=>{const t=`/taskNode/start/multi/default/section/long/${s-1}/beg/${e}/end/${r}`;return Z.post(t)};static getProfileData=(e,r,s)=>{const t=s<10?`/fileData/json/jsonStr/name/multiWholeRes-JC0${s}_beg${e}_end${r}/newest`:`/fileData/json/jsonStr/name/multiWholeRes-JC${s}_beg${e}_end${r}/newest`;return Z.get(t)};static runProfileModelByLine=(e,r,s,t,n,h)=>{const o=`/taskNode/start/multi/default?begTime=${e}&endTime=${r}&startPt=${s},${t}&endPt=${n},${h}`;return Z.post(o)};static getRunStatus=e=>{const r="/taskNode/"+e+"/status";return Z.get(r)};static getRunResult=e=>{const r="/fileData/json/jsonStr/id/"+e;return Z.get(r)}}const ha={class:"timestep-shower"},fa={class:"percentage-value"},ma=qt({__name:"flowTimeShower",props:{timeStep:Number,totalCount:Number,type:String},setup(a){const e=a,r=Fe(()=>Math.ceil(e.timeStep/e.totalCount*100)),s=Fe(()=>{if(e.type=="normal"){let t=Be().startOf("day"),n=e.timeStep/6;return t.add(n,"hour").format("YYYY/MM/DD HH")}else if(e.type=="9711"){let t=Be("1997-08-16").startOf("day"),n=e.timeStep*6;return t.add(n,"hour").format("YYYY/MM/DD HH")}else if(e.type=="9711adwt"){let t=Be("1997-08-12").startOf("day"),n=e.timeStep*1;return t.add(n,"hour").format("YYYY/MM/DD HH")}else if(e.type=="exp"){let t=Be().startOf("day").subtract(1,"day"),n=Math.floor(e.timeStep)*1;return t.add(n,"hour").format("YYYY/MM/DD HH")}});return Fe(()=>s.value.split(" ")[1]),Fe(()=>s.value.split(" ")[0]),xt(()=>{}),(t,n)=>{const h=I("el-progress");return S(),P("div",ha,[w(h,{type:"dashboard",percentage:r.value},{default:U(({percentage:o})=>[c("span",fa,xe(Math.floor(e.timeStep)+"时"),1)]),_:1},8,["percentage"])])}}}),pa=Tt(ma,[["__scopeId","data-v-93ae3e93"]]);class va{constructor(){this.lineNum=3e4,this.segmentNum=8,this.fullLife=this.segmentNum*10,this.progressRate=0,this.speedFactor=2,this.dropRate=.01,this.dropRateBump=.005,this.fillWidth=2,this.aaWidth=3,this.colorScheme=0,this.isUnsteady=!0,this.content="none",this.primitive=0,this.platform="mapbox no worker"}}class xa{constructor(e){this.url="",this.flowFieldResourceArr=[],this.seedingResourceArr=[],this.projection2DResource="",this.projection3DResource="",this.flowFieldTexSize=[0,0],this.seedingTexSize=[0,0],this.projectionTexSize=[0,0],this.flowBoundary=[0,0,0,0],this.extent=[0,0,0,0],this.maxDropRate=0,this.maxDropRateBump=0,this.maxSegmentNum=0,this.maxTrajectoryNum=0,this.maxTextureSize=0,this.url=e}async Parsing(){await te.get(this.url).then(e=>{console.log("reponse::"+e);for(let r of e.data.flow_fields)this.flowFieldResourceArr.push(r);for(let r of e.data.area_masks)this.seedingResourceArr.push(r);this.projection2DResource=e.data.projection["2D"],this.flowFieldTexSize=e.data.texture_size.flow_field,this.seedingTexSize=e.data.texture_size.area_mask,this.projectionTexSize=e.data.texture_size.projection,this.flowBoundary[0]=e.data.flow_boundary.u_min,this.flowBoundary[1]=e.data.flow_boundary.v_min,this.flowBoundary[2]=e.data.flow_boundary.u_max,this.flowBoundary[3]=e.data.flow_boundary.v_max,this.extent[0]=e.data.extent[0],this.extent[1]=e.data.extent[1],this.extent[2]=e.data.extent[2],this.extent[3]=e.data.extent[3],this.maxDropRate=e.data.constraints.max_drop_rate,this.maxDropRateBump=e.data.constraints.max_drop_rate_bump,this.maxSegmentNum=e.data.constraints.max_segment_num,this.maxTrajectoryNum=e.data.constraints.max_streamline_num,this.maxTextureSize=e.data.constraints.max_texture_size})}}class pt{constructor(e,r,s){this.map=null,this.GL=null,this.uboMapBufferData=new Float32Array(12),this.phaseCount=0,this.timePerFrame=100,this.timeLast=10,this.currentResourcePointer=0,this._timeCount=0,this._progressRate=0,this.textureArraySize=0,this.flowFieldTextureArr=[0,0,0],this.seedingTextureArr=[0,0,0],this.transformTexture=0,this.particleMapBufferData=new Float32Array(0),this.simulationBuffer=0,this.xfSimulationBuffer=0,this.lifeBuffer=0,this.xfLifeBuffer=0,this.BO=0,this.simulationVAO=0,this.simulationVAO2=0,this.XFO=0,this.XFO2=0,this.trajectoryPool=0,this.isReady=!1,this.renderVAO=0,this.renderVAO2=0,this.textureOffsetArray=[],this.beginBlock=-1,this.now_FFTextureArr=[0,0],this.now_SeedTextureArr=[0,0],this.now_sVAO=0,this.now_rVAO=0,this.now_XFO=0,this.now_XFBO=0,this.id=e,this.type="custom",this.renderingMode="2d",this.parser=new xa(r),this.resourcePrefix=s,this.controller=new va}set progressRate(e){const r=Math.floor(this._progressRate*this.phaseCount)%this.phaseCount,s=Math.floor(e*this.phaseCount)%this.phaseCount,t=(s+1)%this.phaseCount;this._progressRate=e,this.now_FFTextureArr[0]=this.flowFieldTextureArr[s%this.textureArraySize],this.now_FFTextureArr[1]=this.flowFieldTextureArr[t%this.textureArraySize],this.now_SeedTextureArr[0]=this.seedingTextureArr[s%this.textureArraySize],this.now_SeedTextureArr[1]=this.seedingTextureArr[t%this.textureArraySize];let n=e*this.phaseCount;if(this.uboMapBufferData[0]=n-Math.floor(n),s!=r){this.currentResourcePointer=(this.currentResourcePointer+1)%this.phaseCount;let h=t%this.textureArraySize,o=this.GL;this.UpdateTextureByImage(o,this.flowFieldTextureArr[h],o.RG,o.LINEAR,this.parser.flowFieldTexSize[0],this.parser.flowFieldTexSize[1],this.parser.flowFieldResourceArr[t],"Float"),this.UpdateTextureByImage(o,this.seedingTextureArr[h],o.RGBA,o.NEAREST,this.parser.seedingTexSize[0],this.parser.seedingTexSize[1],this.parser.seedingResourceArr[t],"UNSIGHNED_BYTE")}}get progressRate(){return this._progressRate}set timeCount(e){this._timeCount=e%this.timeLast}get timeCount(){return this._timeCount}async init2ShadersFromSrc(e,r,s,t){const n=await te.get(r).then(F=>F.data).catch(F=>{console.log("ERROR::VERTEX_SHADER FILE NOT FOUND",F)}),h=await te.get(s).then(F=>F.data).catch(F=>{console.log("ERROR::FRAGMENT_SHADER FILE NOT FOUND",F)}),o=e.createShader(e.VERTEX_SHADER);e.shaderSource(o,n),e.compileShader(o);const v=e.createShader(e.FRAGMENT_SHADER);e.shaderSource(v,h),e.compileShader(v);const b=e.createProgram();if(e.attachShader(b,o),e.attachShader(b,v),t&&e.transformFeedbackVaryings(b,t,e.SEPARATE_ATTRIBS),e.linkProgram(b),!e.getProgramParameter(b,e.LINK_STATUS)){console.log(e.getProgramInfoLog(b));return}return{program:b,vertexShader:o,fragmentShader:v}}async FillTextureByImage(e,r,s,t,n,h,o,v){let b=this.resourcePrefix+o;v==="Float"?te.get(b,{responseType:"blob"}).then(F=>{createImageBitmap(F.data,{imageOrientation:"flipY",premultiplyAlpha:"none",colorSpaceConversion:"default"}).then(x=>{const L=new Uint8Array(x.width*x.height*4),d=new OffscreenCanvas(x.width,x.height).getContext("webgl2"),E=d.createFramebuffer();d.bindFramebuffer(d.FRAMEBUFFER,E);const _=d.createTexture();d.bindTexture(d.TEXTURE_2D,_),d.texImage2D(d.TEXTURE_2D,0,d.RGBA8,x.width,x.height,0,d.RGBA,d.UNSIGNED_BYTE,x),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MAG_FILTER,d.LINEAR),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MIN_FILTER,d.LINEAR),d.framebufferTexture2D(d.FRAMEBUFFER,d.COLOR_ATTACHMENT0,d.TEXTURE_2D,_,0),d.readPixels(0,0,x.width,x.height,d.RGBA,d.UNSIGNED_BYTE,L),d.bindTexture(d.TEXTURE_2D,null),d.bindFramebuffer(d.FRAMEBUFFER,null),d.deleteTexture(_),d.deleteFramebuffer(E),d.finish(),e.bindTexture(e.TEXTURE_2D,r),e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,h,e.RG,e.FLOAT,new Float32Array(L.buffer)),e.bindTexture(e.TEXTURE_2D,null),e.finish()})}):await te.get(b,{responseType:"blob"}).then(F=>{createImageBitmap(F.data,{imageOrientation:"flipY",premultiplyAlpha:"none",colorSpaceConversion:"default"}).then(x=>{e.bindTexture(e.TEXTURE_2D,r),e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,h,s,e.UNSIGNED_BYTE,x),e.bindTexture(e.TEXTURE_2D,null),e.finish()})})}async UpdateTextureByImage(e,r,s,t,n,h,o,v){await this.FillTextureByImage(e,r,s,t,n,h,o,v)}FillBlockByData(e,r,s,t,n,h,o){e.bindTexture(e.TEXTURE_2D,r),e.pixelStorei(e.UNPACK_ALIGNMENT,1),e.texSubImage2D(e.TEXTURE_2D,0,s,t,n,h,e.RGB,e.FLOAT,o),e.bindTexture(e.TEXTURE_2D,null)}swap(){this.beginBlock%2==0?(this.now_sVAO=this.simulationVAO,this.now_rVAO=this.renderVAO,this.now_XFO=this.XFO,this.now_XFBO=this.simulationBuffer):(this.now_sVAO=this.simulationVAO2,this.now_rVAO=this.renderVAO2,this.now_XFO=this.XFO2,this.now_XFBO=this.xfSimulationBuffer)}async prepare(e){await this.parser.Parsing();const r=e.getSupportedExtensions();for(let o of r)e.getExtension(o);console.log(this.parser),this.parser.trajectoryNum=this.controller.lineNum,this.parser.segmentPrepare=this.parser.maxSegmentNum,this.parser.segmentNum=this.parser.maxSegmentNum,this.parser.maxBlockSize=Math.ceil(Math.sqrt(this.parser.maxTrajectoryNum)),this.phaseCount=this.parser.flowFieldResourceArr.length,this.timeLast=this.phaseCount*this.timePerFrame,this.textureArraySize=3;for(var s=0;s<this.textureArraySize;s++){let o=e.createTexture();e.bindTexture(e.TEXTURE_2D,o),e.texStorage2D(e.TEXTURE_2D,1,e.RG32F,this.parser.flowFieldTexSize[0],this.parser.flowFieldTexSize[1]),e.bindTexture(e.TEXTURE_2D,null),await this.FillTextureByImage(e,o,e.RG,e.LINEAR,this.parser.flowFieldTexSize[0],this.parser.flowFieldTexSize[1],this.parser.flowFieldResourceArr[s],"Float"),this.flowFieldTextureArr[s]=o;let v=e.createTexture();e.bindTexture(e.TEXTURE_2D,v),e.texStorage2D(e.TEXTURE_2D,1,e.RGBA8,this.parser.seedingTexSize[0],this.parser.seedingTexSize[1]),e.bindTexture(e.TEXTURE_2D,null),await this.FillTextureByImage(e,v,e.RGBA,e.NEAREST,this.parser.seedingTexSize[0],this.parser.seedingTexSize[1],this.parser.seedingResourceArr[s],"UNSIGNED_BYTE"),this.seedingTextureArr[s]=v}let t=e.createTexture();e.bindTexture(e.TEXTURE_2D,t),e.texStorage2D(e.TEXTURE_2D,1,e.RG32F,this.parser.projectionTexSize[0],this.parser.projectionTexSize[1]),e.bindTexture(e.TEXTURE_2D,null),await this.FillTextureByImage(e,t,e.RG,e.LINEAR,this.parser.projectionTexSize[0],this.parser.projectionTexSize[1],this.parser.projection2DResource,"Float"),this.transformTexture=t,this.particleMapBufferData=new Float32Array(this.parser.maxBlockSize*this.parser.maxBlockSize*3).fill(0);for(let o=0;o<this.parser.maxTrajectoryNum;o++)this.particleMapBufferData[o*3+0]=Math.random(),this.particleMapBufferData[o*3+1]=Math.random(),this.particleMapBufferData[o*3+2]=0;const n=new Float32Array(this.parser.maxTrajectoryNum);for(let o=0;o<this.parser.maxTrajectoryNum;o++)n[o]=this.parser.maxSegmentNum*9;this.simulationBuffer=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,this.simulationBuffer),e.bufferData(e.ARRAY_BUFFER,this.particleMapBufferData,e.DYNAMIC_DRAW),e.bindBuffer(e.ARRAY_BUFFER,null),this.xfSimulationBuffer=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,this.xfSimulationBuffer),e.bufferData(e.ARRAY_BUFFER,this.particleMapBufferData,e.DYNAMIC_DRAW),e.bindBuffer(e.ARRAY_BUFFER,null),this.lifeBuffer=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,this.lifeBuffer),e.bufferData(e.ARRAY_BUFFER,n,e.DYNAMIC_DRAW),e.bindBuffer(e.ARRAY_BUFFER,null),this.xfLifeBuffer=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,this.xfLifeBuffer),e.bufferData(e.ARRAY_BUFFER,n,e.DYNAMIC_DRAW),e.bindBuffer(e.ARRAY_BUFFER,null),this.simulationVAO=e.createVertexArray(),e.bindVertexArray(this.simulationVAO),e.bindBuffer(e.ARRAY_BUFFER,this.simulationBuffer),e.vertexAttribPointer(0,3,e.FLOAT,!1,3*4,0),e.enableVertexAttribArray(0),e.bindBuffer(e.ARRAY_BUFFER,this.lifeBuffer),e.vertexAttribPointer(1,1,e.FLOAT,!1,1*4,0),e.enableVertexAttribArray(1),e.bindVertexArray(null),e.bindBuffer(e.ARRAY_BUFFER,null),this.simulationVAO2=e.createVertexArray(),e.bindVertexArray(this.simulationVAO2),e.bindBuffer(e.ARRAY_BUFFER,this.xfSimulationBuffer),e.vertexAttribPointer(0,3,e.FLOAT,!1,3*4,0),e.enableVertexAttribArray(0),e.bindBuffer(e.ARRAY_BUFFER,this.xfLifeBuffer),e.vertexAttribPointer(1,1,e.FLOAT,!1,1*4,0),e.enableVertexAttribArray(1),e.bindVertexArray(null),e.bindBuffer(e.ARRAY_BUFFER,null),this.renderVAO=e.createVertexArray(),e.bindVertexArray(this.renderVAO),e.bindBuffer(e.ARRAY_BUFFER,this.lifeBuffer),e.vertexAttribPointer(0,1,e.FLOAT,!1,1*4,0),e.vertexAttribDivisor(0,1),e.enableVertexAttribArray(0),e.bindVertexArray(null),e.bindBuffer(e.ARRAY_BUFFER,null),this.renderVAO2=e.createVertexArray(),e.bindVertexArray(this.renderVAO2),e.bindBuffer(e.ARRAY_BUFFER,this.xfLifeBuffer),e.vertexAttribPointer(0,1,e.FLOAT,!1,1*4,0),e.vertexAttribDivisor(0,1),e.enableVertexAttribArray(0),e.bindVertexArray(null),e.bindBuffer(e.ARRAY_BUFFER,null),this.XFO=e.createTransformFeedback(),e.bindTransformFeedback(e.TRANSFORM_FEEDBACK,this.XFO),e.bindBuffer(e.TRANSFORM_FEEDBACK_BUFFER,this.xfSimulationBuffer),e.bindBufferRange(e.TRANSFORM_FEEDBACK_BUFFER,0,this.xfSimulationBuffer,0,this.parser.maxBlockSize*this.parser.maxBlockSize*4*3),e.bindBuffer(e.TRANSFORM_FEEDBACK_BUFFER,this.xfLifeBuffer),e.bindBufferRange(e.TRANSFORM_FEEDBACK_BUFFER,1,this.xfLifeBuffer,0,this.parser.maxBlockSize*this.parser.maxBlockSize*4),e.bindTransformFeedback(e.TRANSFORM_FEEDBACK,null),e.bindBuffer(e.TRANSFORM_FEEDBACK_BUFFER,null),this.XFO2=e.createTransformFeedback(),e.bindTransformFeedback(e.TRANSFORM_FEEDBACK,this.XFO2),e.bindBuffer(e.TRANSFORM_FEEDBACK_BUFFER,this.simulationBuffer),e.bindBufferRange(e.TRANSFORM_FEEDBACK_BUFFER,0,this.simulationBuffer,0,this.parser.maxBlockSize*this.parser.maxBlockSize*3*4),e.bindBuffer(e.TRANSFORM_FEEDBACK_BUFFER,this.lifeBuffer),e.bindBufferRange(e.TRANSFORM_FEEDBACK_BUFFER,1,this.lifeBuffer,0,this.parser.maxBlockSize*this.parser.maxBlockSize*4),e.bindTransformFeedback(e.TRANSFORM_FEEDBACK,null),e.bindBuffer(e.TRANSFORM_FEEDBACK_BUFFER,null),this.parser.maxBlockSize=Math.ceil(Math.sqrt(this.parser.maxTrajectoryNum)),this.parser.maxBlockColumn=Math.floor(this.parser.maxTextureSize/this.parser.maxBlockSize);for(let o=0;o<this.parser.maxSegmentNum;o++){let v={offsetX:this.parser.maxBlockSize*(o%this.parser.maxBlockColumn),offsetY:this.parser.maxBlockSize*Math.floor(o/this.parser.maxBlockColumn)};this.textureOffsetArray.push(v)}this.BO=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,this.BO),e.bufferData(e.ARRAY_BUFFER,48,e.DYNAMIC_DRAW),e.bindBuffer(e.ARRAY_BUFFER,null),this.trajectoryPool=e.createTexture(),e.bindTexture(e.TEXTURE_2D,this.trajectoryPool),e.texStorage2D(e.TEXTURE_2D,1,e.RGB32F,this.parser.maxTextureSize,this.parser.maxTextureSize),e.bindTexture(e.TEXTURE_2D,null);for(let o=0;o<this.parser.maxSegmentNum;o++)this.FillBlockByData(e,this.trajectoryPool,this.textureOffsetArray[o].offsetX,this.textureOffsetArray[o].offsetY,this.parser.maxBlockSize,this.parser.maxBlockSize,this.particleMapBufferData);let h=["newInfo","aliveTime"];this.updateShaderObj=await this.init2ShadersFromSrc(e,"/scratchSomething/flowWebGL/shaders/update.vert","/scratchSomething/flowWebGL/shaders/update.frag",h),this.trajectoryShaderObj=await this.init2ShadersFromSrc(e,"/scratchSomething/flowWebGL/shaders/trajectory.noCulling.vert","/scratchSomething/flowWebGL/shaders/trajectory.noCulling.frag"),e.bindBuffer(e.ARRAY_BUFFER,null),e.bindBuffer(e.TRANSFORM_FEEDBACK_BUFFER,null),e.bindVertexArray(null),this.uboMapBufferData[8]=this.parser.flowBoundary[0],this.uboMapBufferData[9]=this.parser.flowBoundary[1],this.uboMapBufferData[10]=this.parser.flowBoundary[2],this.uboMapBufferData[11]=this.parser.flowBoundary[3],this.isReady=!0}tickfunc(e,r){this.beginBlock=(this.beginBlock+1)%this.parser.segmentNum,this.swap(),this.controller.isUnsteady&&(this.progressRate=this.timeCount/this.timeLast,this.timeCount=this.timeCount+1),this.uboMapBufferData[1]=this.parser.maxSegmentNum,this.uboMapBufferData[2]=this.parser.maxSegmentNum*10,this.uboMapBufferData[3]=this.controller.dropRate,this.uboMapBufferData[4]=this.controller.dropRateBump,this.uboMapBufferData[5]=this.controller.speedFactor*.01*100,this.uboMapBufferData[6]=this.controller.colorScheme,e.bindBuffer(e.UNIFORM_BUFFER,this.BO),e.bufferData(e.UNIFORM_BUFFER,this.uboMapBufferData,e.DYNAMIC_DRAW);let s=0;e.bindBufferRange(e.UNIFORM_BUFFER,s,this.BO,0,48),e.bindVertexArray(this.now_sVAO),e.bindTransformFeedback(e.TRANSFORM_FEEDBACK,this.now_XFO),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,this.now_FFTextureArr[0]),e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,this.now_FFTextureArr[1]),e.activeTexture(e.TEXTURE2),e.bindTexture(e.TEXTURE_2D,this.now_SeedTextureArr[0]),e.activeTexture(e.TEXTURE3),e.bindTexture(e.TEXTURE_2D,this.now_SeedTextureArr[1]),e.useProgram(this.updateShaderObj.program);let t=null;t=e.getUniformLocation(this.updateShaderObj.program,"flowField"),e.uniform1iv(t,[0,1]),t=e.getUniformLocation(this.updateShaderObj.program,"mask"),e.uniform1iv(t,[2,3]),t=e.getUniformLocation(this.updateShaderObj.program,"randomSeed"),e.uniform1f(t,Math.random());let n=0;if(n=e.getUniformBlockIndex(this.updateShaderObj.program,"FlowFieldUniforms"),e.uniformBlockBinding(this.updateShaderObj.program,n,s),e.enable(e.RASTERIZER_DISCARD),e.beginTransformFeedback(e.POINTS),e.drawArrays(e.POINTS,0,this.parser.trajectoryNum),e.endTransformFeedback(),e.disable(e.RASTERIZER_DISCARD),e.bindVertexArray(null),e.bindTransformFeedback(e.TRANSFORM_FEEDBACK,null),e.bindBuffer(e.PIXEL_UNPACK_BUFFER,this.now_XFBO),e.bindTexture(e.TEXTURE_2D,this.trajectoryPool),e.pixelStorei(e.UNPACK_ALIGNMENT,1),e.texSubImage2D(e.TEXTURE_2D,0,this.textureOffsetArray[this.beginBlock].offsetX,this.textureOffsetArray[this.beginBlock].offsetY,this.parser.maxBlockSize,this.parser.maxBlockSize,e.RGB,e.FLOAT,0),e.bindTexture(e.TEXTURE_2D,null),e.bindBuffer(e.PIXEL_UNPACK_BUFFER,null),e.finish(),this.parser.segmentPrepare>0){this.parser.segmentPrepare--;return}e.bindVertexArray(this.now_rVAO),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,this.trajectoryPool),e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,this.transformTexture),e.disable(e.DEPTH_TEST),e.useProgram(this.trajectoryShaderObj.program),t=e.getUniformLocation(this.trajectoryShaderObj.program,"particlePool"),e.uniform1i(t,0),t=e.getUniformLocation(this.trajectoryShaderObj.program,"projectionTexture"),e.uniform1i(t,1),t=e.getUniformLocation(this.trajectoryShaderObj.program,"blockNum"),e.uniform1i(t,this.parser.maxSegmentNum),t=e.getUniformLocation(this.trajectoryShaderObj.program,"beginBlock"),e.uniform1i(t,this.beginBlock),t=e.getUniformLocation(this.trajectoryShaderObj.program,"blockSize"),e.uniform1i(t,this.parser.maxBlockSize),t=e.getUniformLocation(this.trajectoryShaderObj.program,"fillWidth"),e.uniform1f(t,this.controller.fillWidth),t=e.getUniformLocation(this.trajectoryShaderObj.program,"aaWidth"),e.uniform1f(t,this.controller.aaWidth),t=e.getUniformLocation(this.trajectoryShaderObj.program,"viewport"),e.uniform2f(t,e.canvas.width,e.canvas.height),t=e.getUniformLocation(this.trajectoryShaderObj.program,"u_matrix"),e.uniformMatrix4fv(t,!1,r),n=e.getUniformBlockIndex(this.trajectoryShaderObj.program,"FlowFieldUniforms"),e.uniformBlockBinding(this.trajectoryShaderObj.program,n,s),e.drawArraysInstanced(e.TRIANGLE_STRIP,0,(this.parser.segmentNum-1)*2,this.parser.trajectoryNum),e.bindVertexArray(null),e.bindTexture(e.TEXTURE_2D,null)}async onAdd(e,r){this.GL=r,this.map=e,await this.prepare(r)}render(e,r){if(!this.isReady){this.map?.triggerRepaint();return}this.tickfunc(e,r),this.map?.triggerRepaint()}}class Ta{constructor(e){this.id="岸段预警",this.jsonData=e,this.map=void 0,this.type="custom",this.showLayer=!1,this.prepared=!1,console.log("contruictasd12312",this.jsonData)}async onAdd(e,r){this.map=e,this.vertexData=[],this.warnValues=[],this.vertexCount=0,this.jsonData.forEach(o=>{let v=ut.MercatorCoordinate.fromLngLat({lng:o.coords[0][0],lat:o.coords[0][1]}),b=ut.MercatorCoordinate.fromLngLat({lng:o.coords[1][0],lat:o.coords[1][1]});this.vertexData.push(v.x,v.y,o.warnValue,b.x,b.y,o.warnValue),this.vertexCount+=2});const s=`
        uniform mat4 u_matrix;
        attribute vec3 a_position; 
        varying float v_warnValue; 

        void main() {
            v_warnValue = a_position.z; 
            gl_Position = u_matrix * vec4(a_position.x, a_position.y, 0.0, 1.0);
        }`,t=`
        precision mediump float;
        varying float v_warnValue; 

        void main() {
            // int pallete[10] = {
            //     0x00b0f0,
            //     0x76a9c8,
            //     0xa69f9f,
            //     0xcc9071,
            //     0xed7c31,
            //     0xf06f24,
            //     0xf46018,
            //     0xf84e0d,
            //     0xfb3704,
            //     0xff0000,
            // }
            // int pallete[3] = {
            //     0x00b0f0,
            //     0x76a9c8,
            //     0xff0000,
            // }
            // int botIndex = floor(v_warnValue * 2);
            // int topIndex = floor(v_warnValue * 2 + 0.5);
            // int interval = value * 10.0 - botIndex;

            // vec3 botColor = colorFromInt(rampColors[botIndex]);
            // vec3 topColor = colorFromInt(rampColors[botIndex+1]);
            // vec3 topColor = colorFromInt(rampColors[topIndex]);
            // vec3 resultColor = mix(botColor, topColor, interval);

            // vec3 green = vec3(0.0, 1.0, 0.0);
            vec3 blue = vec3(0.0, 0.0, 1.0);
            vec3 orange = vec3(240.0, 120.0, 0.0) / 255.0;
            vec3 red = vec3(1.0, 0.0, 0.0);
            float v_warnValueP = clamp(v_warnValue*1.4, 0.0, 1.0);


            vec3 greenToBlue = mix(blue, orange, smoothstep(0.0, 0.5, v_warnValueP));
            // Interpolate between blue and red from 0.5 to 1.0
            vec3 blueToRed = mix(orange, red, smoothstep(0.5, 1.0, v_warnValueP));
            // Combine the two interpolations
            vec3 color = mix(greenToBlue, blueToRed, smoothstep(0.0, 1.0, v_warnValueP));

            // gl_FragColor  = vec4(v_warnValueP, 0, 1.0-v_warnValueP, 0.85); // 使用 fragColor 代替 gl_FragColor
            gl_FragColor  = vec4(color, 0.85); // 使用 fragColor 代替 gl_FragColor
        }`,n=r.createShader(r.VERTEX_SHADER);r.shaderSource(n,s),r.compileShader(n);const h=r.createShader(r.FRAGMENT_SHADER);r.shaderSource(h,t),r.compileShader(h),this.program=r.createProgram(),r.attachShader(this.program,n),r.attachShader(this.program,h),r.linkProgram(this.program),this.aPos=r.getAttribLocation(this.program,"a_position"),console.log(this.aPos),this.buffer=r.createBuffer(),r.bindBuffer(r.ARRAY_BUFFER,this.buffer),r.bufferData(r.ARRAY_BUFFER,new Float32Array(this.vertexData),r.STATIC_DRAW),this.prepared=!0}async render(e,r){this.prepared&&(e.useProgram(this.program),e.uniformMatrix4fv(e.getUniformLocation(this.program,"u_matrix"),!1,r),e.bindBuffer(e.ARRAY_BUFFER,this.buffer),e.enableVertexAttribArray(this.aPos),e.vertexAttribPointer(this.aPos,3,e.FLOAT,!1,0,0),e.enable(e.BLEND),e.blendFunc(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA),e.drawArrays(e.TRIANGLE_STRIP,0,this.vertexCount))}show(){}hide(){}}const vt={20092003:{min:-20.216260910034,max:12.377036094666},21032003:{min:-18.057029724121,max:13.405656814575},21032009:{min:-11.904377937317,max:15.555559158325},21092003:{min:-29.0481300354,max:13.405656814575},21092009:{min:-21.573017120361,max:13.338559150696},21092103:{min:-22.064949035645,max:8.261926651001},22032003:{min:-26.315940856934,max:12.661833763123},22032009:{min:-18.946474075317,max:10.854301452637},22032103:{min:-18.682374954224,max:11.998920440674},22032109:{min:-18.682374954224,max:17.446615219116},22092003:{min:-34.24059677124,max:18.287557601929},22092009:{min:-28.642517089844,max:18.124055862427},22092103:{min:-28.885349273682,max:17.996383666992},22092109:{min:-20.775089263916,max:19.373840332031},22092203:{min:-20.959928512573,max:17.246448516846},23032003:{min:-25.497043609619,max:23.978927612305},23032009:{min:-15.159237861633,max:24.311046600342},23032103:{min:-16.9319896698,max:24.412498474121},23032109:{min:-11.673976898193,max:24.870639801025},23032203:{min:-10.602119445801,max:19.81965637207},23032209:{min:-10.008462905884,max:21.046541213989},23092003:{min:-24.543750762939,max:23.484636306763},23092009:{min:-14.633073806763,max:23.901466369629},23092103:{min:-15.942059516907,max:23.92653465271},23092109:{min:-12.148267745972,max:24.699771881104},23092203:{min:-11.635368347168,max:19.993438720703},23092209:{min:-11.635368347168,max:26.141702651978},23092303:{min:-11.635368347168,max:16.081762313843}},Xe=[{name:"JC01",coords:[[120.49989610501109,32.044845778820694],[120.49965852902085,32.043054010465546]],warnValue:.49},{name:"JC02",coords:[[120.51211644811006,32.04310480824947],[120.51157809855385,32.04135665004222]],warnValue:.59},{name:"JC03",coords:[[120.51598399026375,32.04244111945512],[120.51554162835052,32.04064910386879]],warnValue:.64},{name:"JC04",coords:[[120.52163733002358,32.040317481106044],[120.52010747944439,32.03901766791365]],warnValue:.67},{name:"JC05",coords:[[120.52344753736321,32.03912224359854],[120.52202732882418,32.037765786589944]],warnValue:.76},{name:"JC06",coords:[[120.5300568728269,32.035076196597906],[120.52886185568613,32.03359585101801]],warnValue:.83},{name:"JC07",coords:[[120.53577029390934,32.03306474923213],[120.53521759568126,32.03132371065091]],warnValue:.9},{name:"JC08",coords:[[120.54259039936055,32.03113531223312],[120.54191211481913,32.0294311450221]],warnValue:.73},{name:"JC09",coords:[[120.54845619793755,32.02942703528161],[120.547645906125,32.027757714058616]],warnValue:.53},{name:"JC10",coords:[[120.55217332294447,32.02819103999115],[120.55139957273384,32.02651468780271]],warnValue:.43},{name:"JC11",coords:[[120.55987007042168,32.0256085153387],[120.55938372124096,32.02385317986381]],warnValue:.29},{name:"JC12",coords:[[120.56542283954619,32.023997421425335],[120.56490201809913,32.022254233310434]],warnValue:.18}],ba=[{value:1,id:"JC01",label:"MZ01围堤",name:"MZ01围堤",nickname:"围堤",filter:["==","name","JC01"],flowspeed:null,risk:null,color:null},{value:2,id:"JC02",label:"MZ02顺堤",name:"MZ02顺堤",nickname:"顺堤",filter:["==","name","JC02"],flowspeed:null,risk:null,color:null},{value:3,id:"JC03",label:"MZ03顺堤尾",name:"MZ03顺堤尾",nickname:"顺堤尾",filter:["==","name","JC03"],flowspeed:null,risk:null,color:null},{value:4,id:"JC04",label:"MZ04江滩办",name:"MZ04江滩办",nickname:"江滩办",filter:["==","name","JC04"],flowspeed:null,risk:null,color:null},{value:5,id:"JC05",label:"MZ05小港池",name:"MZ05小港池",nickname:"小港池",filter:["==","name","JC05"],flowspeed:null,risk:null,color:null},{value:6,id:"JC06",label:"MZ06张靖皋桥位",name:"MZ06张靖皋桥位",nickname:"张靖皋桥位",filter:["==","name","JC06"],flowspeed:null,risk:null,color:null},{value:7,id:"JC07",label:"MZ07桥位下游",name:"MZ07桥位下游",nickname:"桥位下游",filter:["==","name","JC07"],flowspeed:null,risk:null,color:null},{value:8,id:"JC08",label:"MZ08海事码头",name:"MZ08海事码头",nickname:"海事码头",filter:["==","name","JC08"],flowspeed:null,risk:null,color:null},{value:9,id:"JC09",label:"MZ09码头下游",name:"MZ09码头下游",nickname:"码头下游",filter:["==","name","JC09"],flowspeed:null,risk:null,color:null},{value:10,id:"JC10",label:"MZ10雷达站",name:"MZ10雷达站",nickname:"雷达站",filter:["==","name","JC10"],flowspeed:null,risk:null,color:null},{value:11,id:"JC11",label:"MZ11主路",name:"MZ11主路",nickname:"主路",filter:["==","name","JC11"],flowspeed:null,risk:null,color:null},{value:12,id:"JC12",label:"MZ12沙尾",name:"MZ12沙尾",nickname:"沙尾",filter:["==","name","JC12"],flowspeed:null,risk:null,color:null}],_a=[{value:"1999before",name:"1999汛前地形数据",label:"1999汛前",year:"1999",time:"汛前",date:"1999-01-01",dateShort:"9901"},{value:"2012after",name:"2012汛后地形数据",label:"2012汛后",year:"2012",time:"汛后",date:"2012-10-01",dateShort:"1210"},{value:"2019before",name:"2019汛前地形数据",label:"2019汛前",year:"2019",time:"汛前",date:"2019-04-01",dateShort:"1904"},{value:"2023before1",name:"2023汛前地形数据",label:"2023汛前",year:"2023",time:"汛前",date:"2023-04-01",dateShort:"2304"},{value:"2020before",name:"2020汛前地形数据",label:"2020汛前",year:"2020",time:"汛前",date:"2020-03-01",dateShort:"2003"},{value:"2020before",name:"2020汛前地形数据",label:"2020汛前",year:"2020",time:"汛前",date:"2020-03-01",dateShort:"2003"},{value:"2020after",name:"2020汛后地形数据",label:"2020汛后",year:"2020",time:"汛后",date:"2020-09-01",dateShort:"2009"},{value:"2021before",name:"2021汛前地形数据",label:"2021汛前",year:"2021",time:"汛前",date:"2021-03-01",dateShort:"2103"},{value:"2021after",name:"2021汛后地形数据",label:"2021汛后",year:"2021",time:"汛后",date:"2021-09-01",dateShort:"2109"},{value:"2022before",name:"2022汛前地形数据",label:"2022汛前",year:"2022",time:"汛前",date:"2022-03-01",dateShort:"2203"},{value:"2022after",name:"2022汛后地形数据",label:"2022汛后",year:"2022",time:"汛后",date:"2022-09-01",dateShort:"2209"},{value:"2023before",name:"2023汛前地形数据",label:"2023汛前",year:"2023",time:"汛前",date:"2023-03-01",dateShort:"2303"},{value:"2023after",name:"2023汛后地形数据",label:"2023汛后",year:"2023",time:"汛后",date:"2023-09-01",dateShort:"2309"}],Ra=[{label:"水流动力因素",active:!1,children:[{label:"造床流量当量指标",icon:"/icons/行政区划.png",active:!1,filter:!0},{label:"流速指标",icon:"/icons/河道分段.png",active:!1,filter:!0},{label:"水位变幅指标",icon:"/icons/流域水系.png",active:!1,filter:!0}]},{label:"河床演变因素",active:!1,filter:!0,children:[{label:"岸坡最大坡比",icon:"/icons/江堤港堤.png",active:!1,filter:!0},{label:"近岸冲刷速率",icon:"/icons/长江堤防.png",active:!1,filter:!0},{label:"滩槽高程",icon:"/icons/过江通道.png",active:!1,filter:!0}]},{label:"岸坡地质因素",active:!1,filter:!0,children:[{label:"河岸组成粒径",icon:"/icons/岸段名录.png",active:!1,filter:!0},{label:"垂向分层结构",icon:"/icons/过江通道.png",active:!1,filter:!0}]},{label:"外部工程因素",active:!1,filter:!0,children:[{label:"护岸强度",icon:"/icons/岸段名录.png",active:!1,filter:!0},{label:"局部突加荷载",icon:"/icons/过江通道.png",active:!1,filter:!0}]}],B=a=>(ta("data-v-0bb7a413"),a=a(),aa(),a),Ea={class:"risk-warn-container"},ya=bt('<canvas id="GPUFrame" data-v-0bb7a413></canvas><div class="basic-info-container" data-v-0bb7a413><div class="basic-info-content" data-v-0bb7a413><div class="title-container" data-v-0bb7a413>民主沙右缘示范段</div><div class="key-val-container" data-v-0bb7a413><div class="key-text" data-v-0bb7a413>预警级别：</div><div class="val-text" data-v-0bb7a413>Ⅰ级</div></div><div class="key-val-container right" data-v-0bb7a413><div class="key-text" data-v-0bb7a413>岸段长度：</div><div class="val-text" data-v-0bb7a413>全长7公里</div></div></div></div><div class="risk-item-title" data-v-0bb7a413>崩岸风险因素分析</div>',3),Sa={class:"risk-item-container"},Aa=B(()=>c("div",{class:"risk-item-text"},"水流动力",-1)),wa=B(()=>c("div",{class:"risk-item-text"},"河床演变",-1)),Fa=B(()=>c("div",{class:"risk-item-text"},"地质与工程治理",-1)),Ba={key:0,class:"raster-control-block"},La={class:"switch"},Ua=["checked"],Da=B(()=>c("span",{class:"slider"},null,-1)),Ca=B(()=>c("div",{class:"text-block"},[c("div",{class:"text"},"冲淤图展示")],-1)),Ma={class:"bankLine-control-block"},Pa={class:"switch"},ka=["checked"],Na=B(()=>c("span",{class:"slider"},null,-1)),Oa=B(()=>c("div",{class:"text-block"},[c("div",{class:"text"},"岸段展示")],-1)),Ia={class:"terrain-control-block"},za={class:"switch"},Va=["checked"],Xa=B(()=>c("span",{class:"slider"},null,-1)),ja=B(()=>c("div",{class:"text-block"},[c("div",{class:"text"},"三维地形")],-1)),Ga=bt('<div class="risk-line-container" data-v-0bb7a413><div class="risk-line-title" data-v-0bb7a413>风险等级图例：</div><div class="risk-line" data-v-0bb7a413></div><div class="risk-line-arrow high" data-v-0bb7a413><img src="'+da+'" alt="图例标记" data-v-0bb7a413></div><div class="risk-line-mark low" data-v-0bb7a413>低风险</div><div class="risk-line-mark middle" data-v-0bb7a413>中风险</div><div class="risk-line-mark high" data-v-0bb7a413>高风险</div></div>',1),Ya={key:1,class:"warn-status-container"},Wa=B(()=>c("div",{class:"warn-status-title"},"民主沙右缘风险评估结果",-1)),Ja=B(()=>c("div",{class:"warn-status-content high"},"高风险",-1)),Ha=[Wa,Ja],$a={key:2,class:"warn-detail-container high"},Za={class:"warn-detail-profile"},Ka={class:"warn-detail-text"},qa=B(()=>c("span",{class:"warn-detail-span"},null,-1)),Qa={class:"warn-detail-span"},ga={key:8,style:{position:"absolute",top:"16.25vh",left:"0.3vw",width:"26vw",height:"23.5vh","z-index":"10"}},er={key:10,class:"flow-control-block"},tr={class:"switch",style:{transform:"rotateZ(90deg)"}},ar=["checked"],rr=B(()=>c("span",{class:"slider"},null,-1)),ir=B(()=>c("div",{class:"text-block"},[c("div",{class:"text"},"流场展示")],-1)),or={key:11,class:"time-shower-block"},sr={key:12,style:{position:"absolute",top:"66vh",left:"0.3vw",width:"26vw",height:"25vh","z-index":"10"}},nr={key:14,class:"drag riskResult"},lr={key:15,class:"raster-legend-container"},ur=B(()=>c("img",{src:ca,alt:"比例尺"},null,-1)),dr=[ur],cr=B(()=>c("span",null,"确认使用此断面进行计算",-1)),hr={class:"dialog-footer"},fr={style:{"text-align":"right"}},mr=B(()=>c("span",null,"确认使用以下年份地形数据进行计算：",-1)),pr={style:{position:"absolute",top:"6.5vh","font-weight":"bold"}},vr={style:{position:"absolute",top:"8.5vh","font-weight":"bold"}},xr={class:"dialog-footer"},Tr={style:{"text-align":"right"}},br={class:"loading-container"},_r={class:"loading-message"},Rr={class:"hydro-pannel"},Er={class:"title"},yr={__name:"BankRiskWarnView",setup(a){const e="http://172.21.212.165:8989/api/v1";u(-1);const r=j(()=>G(()=>import("./riskResult-C1Q3F4r5.js"),__vite__mapDeps([0,1,2,3]))),s=j(()=>G(()=>import("./flowspeedInfo-D8b0ASot.js"),__vite__mapDeps([4,1,2,5,6]))),t=j(()=>G(()=>import("./profileInfo-Cv9DhRko.js"),__vite__mapDeps([7,5,1,2,8]))),n=j(()=>G(()=>import("./profileShapeCompare-BPRY1jRO.js"),__vite__mapDeps([9,5,1,2,10]))),h=j(()=>G(()=>import("./profileSlope-WqPd5kNL.js"),__vite__mapDeps([11,5,1,2,12]))),o=j(()=>G(()=>import("./profileErosion-zXHmdO67.js"),__vite__mapDeps([13,5,1,2,14]))),v=j(()=>G(()=>import("./BedFlowChart-96aI7_WW.js"),__vite__mapDeps([15,1,2,16]))),b=j(()=>G(()=>import("./WaterProcessChart-CipewoU8.js"),__vite__mapDeps([17,1,2,18]))),F=j(()=>G(()=>import("./GeologyAndProject-CGiTYwxC.js"),__vite__mapDeps([19,1,2,20]))),x=u("自定义断面信息计算中..."),L=u(),D=u(0),d=u(!1);u(0);const E=u(!1),_=u(!1),z=u(!0),K=u(!1);u(Ra);const Y=u("洪季"),_t=[{station:"大通站",flow:"N/A",level:"N/A"},{station:"南京站",flow:"N/A",level:"N/A"},{station:"镇江站",flow:"N/A",level:"N/A"},{station:"三江营站",flow:"N/A",level:"N/A"},{station:"江阴站",flow:"N/A",level:"N/A"},{station:"徐六泾站",flow:"N/A",level:"N/A"}],Rt=i=>{Y.value=i,console.log(Y.value),E.value=!1,D.value=0;let l=fe().getMap();l.getLayer("floodFlow")&&(l.removeLayer("floodFlow"),re&&(re(),re=null)),l.getLayer("dryFlow")&&(l.removeLayer("dryFlow"),ie&&(ie(),ie=null))},Et=i=>{i&&i.fitBounds([[120.43987922676835,32.03201616423072],[120.59089640208263,32.05217136261862]],{duration:1500})},R=u(ba),ae=u(_a);let yt=Xe;u([{value:"low",label:"低风险"},{value:"middle",label:"中风险"},{value:"high",label:"高风险"}]),u("mzs");const je=()=>{oe=ae.value.find(i=>i.value===_e.value),se=ae.value.find(i=>i.value===Re.value),De=ae.value.find(i=>i.value===Dt.value),Ce=ae.value.find(i=>i.value===Ct.value)},St=i=>{let l="";return R.value.map(p=>{p.risk===i&&(l=l+p.name+"; ")}),l},At=()=>{we.value=!1},wt=async()=>{if(je(),we.value=!1,se.dateShort<=oe.dateShort){Le.error("当前地形时间不能早于或等于对比地形时间！");return}if(He.value===_e.value&&$e.value===Re.value){Le.error("当前地形时间与对比地形时间未发生变化！");return}x.value="冲淤图层加载中...",ce.value=!0,ue.value=!0,de.value=!0,Oe.value=!0;const i=se.dateShort+oe.dateShort;_.value||(_.value=!0),y.removeLayer("mapRaster"),y.removeSource("mapRaster"),st(y,i,"mapRaster"),y.moveLayer("mapRaster","mzsLine"),Ge(oe,se,De,Ce)},Te=i=>{y.setFilter("mzsBankLineChoosen",R.value[i-1].filter)},Ge=async(i,l,p,f)=>{const T=i.date,m=l.date,N=p.date,V=f.date;x.value="确认计算结果是否存在...",ce.value=!0;let he,$;he=await Ye(T,m),$=await Ye(N,V),he&&$?(x.value="地形对比数据加载中...",k.value=await W(T,m),ve.value=await W(N,V)):he&&!$?(x.value="地形对比数据加载中...",await be(N,V),x.value="地形对比数据加载中...",k.value=await W(T,m),ve.value=await W(N,V)):!he&&$?(x.value="地形对比数据加载中...",await be(T,m),x.value="地形对比数据加载中...",k.value=await W(T,m),ve.value=await W(N,V)):(x.value="地形对比数据加载中...",await be(N,V),await be(T,m),x.value="地形对比数据加载中...",k.value=await W(T,m),ve.value=await W(N,V)),ce.value=!1,ue.value=!1,Se.value=!1,de.value=!1,Oe.value=!1,Jt(),Bt(k.value),y.getLayer("mzsBankLineLowRisk")!==void 0&&y.removeLayer("mzsBankLineLowRisk"),nt(y,R),Ee.value=!0,He.value=_e.value,$e.value=Re.value},Ye=async(i,l)=>{const p=[];let f=!0;try{for(let m=0;m<12;m++)p.push(ee.getProfileData(i,l,m+1));(await Promise.all(p)).forEach(m=>{(!m||!m.data||m.data.length===0)&&(f=!1)})}catch{f=!1}return f},W=async(i,l)=>{const p=[],f=[];for(let m=0;m<12;m++)p.push(ee.getProfileData(i,l,m+1));return(await Promise.all(p)).forEach(m=>{m&&m.data&&f.push(m.data)}),f},be=async(i,l)=>{const p=[];for(let f=0;f<R.value.length;f++)p.push(Ft(i,l,f));await Promise.all(p)},Ft=async(i,l,p)=>{const f=await ee.runProfileModel_long(i,l,p+1);let T;for(;;){try{T=await ee.getRunStatus(f.data)}catch{}if(T.data==2)break;if(T.data==-1)return;if(T.data==-2)return;T.data==1,await ot(100)}},Bt=i=>{i.map((l,p)=>{R.value[p].risk==="low"?R.value[p].color="rgb(31, 110, 209)":R.value[p].risk==="middle"?R.value[p].color="rgb(220, 126, 37)":R.value[p].color="rgb(250, 55, 36)";try{R.value[p].flowspeed=l.deepestPoint[2]}catch{}}),fe().getMap()};let re=null,ie=null;const We=async()=>{E.value=!E.value;let i=fe().getMap();if(D.value=0,E.value){if(Y.value=="洪季"){let l="/api/data/flow/configJson/flood",p="/api/data/flow/texture/flood/",f=ct(new pt("floodFlow",l,p));i.addLayer(f,"chaoWeiPointLable"),re=ht(()=>f._progressRate,T=>{let m=parseFloat((f.timeCount/f.timePerFrame).toFixed(1));D.value=m}),console.log("add 洪季")}else if(Y.value=="枯季"){let l="/api/data/flow/configJson/dry",p="/api/data/flow/texture/dry/",f=ct(new pt("dryFlow",l,p));i.addLayer(f,"chaoWeiPointLable"),ie=ht(()=>f._progressRate,T=>{let m=parseFloat((f.timeCount/f.timePerFrame).toFixed(1));D.value=m}),console.log("add 枯季")}}else Y.value=="洪季"?i.getLayer("floodFlow")&&(i.removeLayer("floodFlow"),re(),re=null):Y.value=="枯季"&&i.getLayer("dryFlow")&&(i.removeLayer("dryFlow"),ie(),ie=null)},Je=()=>{_.value&&q.value?(y.setLayoutProperty("mapRaster","visibility","none"),_.value=!_.value):!_.value&&q.value?(y.setLayoutProperty("mapRaster","visibility","visible"),_.value=!_.value):_.value&&!q.value?(y.setLayoutProperty("mapRaster","visibility","none"),_.value=!_.value):y.setLayoutProperty("mapRaster","visibility","none")},Lt=()=>{z.value?y.setLayoutProperty("岸段预警","visibility","none"):y.setLayoutProperty("岸段预警","visibility","visible"),z.value=!z.value},Ut=()=>{K.value?y.setLayoutProperty("TerrainLayer","visibility","none"):y.setLayoutProperty("TerrainLayer","visibility","visible"),K.value=!K.value},_e=u("2019before"),Re=u("2023before1"),Dt=u("1999before"),Ct=u("2012after"),He=u("2019before"),$e=u("2023before1");u("2012after"),u("2012after");let oe,se,De,Ce;const Ee=u(!1),Ze=u(!1),Ke=u(!1),qe=()=>{Ke.value=!Ke.value},ne=u(!1),Qe=()=>{ne.value=!ne.value},ge=u(!1),et=u(!1),tt=u(!1),Me=u(!1),Mt=()=>{Me.value=!Me.value},Pe=u(!1),Pt=()=>{Pe.value=!Pe.value},J=u(!1),kt=async()=>{if(E.value===!1&&J.value===!0){J.value=!1;return}J.value=!J.value,D.value=0,await We()},q=u(!1),at=()=>{Je(),q.value=!q.value},le=u(!1),ye=async()=>{H.value===!0?ke():Q.value===!0&&Ne(),Mt(),Pt(),await kt(),y.setLayoutProperty("mapRaster","visibility","none"),le.value=!le.value},H=u(!1),ke=()=>{if(le.value===!0?ye():Q.value===!0&&Ne(),_.value===!1&&ne.value===!0||_.value===!0&&ne.value===!1){Qe(),qe(),at(),H.value=!H.value;return}Qe(),qe(),at(),H.value=!H.value},Q=u(!1),Ne=()=>{le.value===!0?ye():H.value===!0&&ke(),y.setLayoutProperty("mapRaster","visibility","none"),Q.value=!Q.value},k=u([]),ve=u([]);u(0),u([]);const rt=u(null),Nt=u(null),it=u(!0),ue=u(!0),Se=u(!0),de=u(!0),Oe=u(!0),g=u(""),Ot=u("");u(""),u("");let y;const Ae=u(!1),we=u(!1);u(""),u("");const ce=u(!1);let It,zt,Vt,Xt;new ra({displayControlsDefault:!1,controls:{line_string:!0,trash:!0},styles:[{id:"gl-draw-line",type:"line",filter:["all",["==","$type","LineString"],["==","mode","draw_line_string"]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#D20C0C","line-dasharray":[.2,2],"line-width":2}},{id:"gl-draw-polygon-and-line-vertex-halo-active",type:"circle",filter:["all",["==","meta","vertex"],["==","$type","Point"],["==","mode","draw_line_string"]],paint:{"circle-radius":5,"circle-color":"#FFF"}},{id:"gl-draw-polygon-and-line-vertex-active",type:"circle",filter:["all",["==","meta","vertex"],["==","$type","Point"],["==","mode","draw_line_string"]],paint:{"circle-radius":3,"circle-color":"#D20C0C"}},{id:"gl-draw-line-static",type:"line",filter:["all",["==","$type","LineString"],["!=","mode","draw_line_string"]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#000","line-width":3}}]});const jt=()=>{Ae.value=!1},Gt=async()=>{if(g.value===""){Le.error("断面名称不为空！");return}else if(R.value.find(m=>m.name===g.value)){Le.error("断面名称已存在！");return}ce.value=!0,it.value=!0,ue.value=!0,Se.value=!0,de.value=!0,x.value="自定义断面信息计算中...",Ae.value=!1;const i=ae.value.find(m=>m.value==_e.value).date,l=ae.value.find(m=>m.value==Re.value).date,p=await Yt(i,l,It,zt,Vt,Xt);let f="";for(;;){try{f=await ee.getRunStatus(p.data)}catch{}if(f.data==2)break;if(f.data==-1)return;if(f.data==-2)return;f.data==1,await ot(500)}const T=await ee.getRunResult(p.data);Wt(T.data),k.value.push(T.data),ce.value=!1,it.value=!1,ue.value=!1,Se.value=!1,de.value=!1};async function ot(i){return new Promise(l=>setTimeout(l,i))}const Yt=async(i,l,p,f,T,m)=>await ee.runProfileModelByLine(i,l,p,f,T,m),Wt=i=>{let l;i.risk[2]<.25?l="low":i.risk[2]<.5?l="middle":l="high",Ot.value=l,rt.value={value:R.value.length+1,label:g.value,name:g.value,filter:["==","$type",`${g.value}`],flowspeed:i.deepestPoint[2],risk:l},Nt.value=i,R.value.push(rt.value)},st=(i,l,p)=>{i.addSource(p,{type:"raster",tiles:[e+`/tile/raster/mzs/flood/${l}/{x}/{y}/{z}`],tileSize:256,minzoom:10,maxzoom:20,bounds:[120.109,31.823,120.855,32.102]});let f=vt[l].min,T=vt[l].max;i.addLayer({id:p,type:"raster",source:p,paint:{"raster-color":["interpolate",["linear"],["raster-value"],-10-f,"rgba(0,0,255,1)",0-f,"rgba(255, 255, 255, 1)",10-f,"rgba(255, 0, 0, 1)"],"raster-color-mix":[T-f,0,0,0],"raster-opacity":.85,"raster-color-range":[-30,30]}})},Jt=()=>{for(let i=0;i<12;i++)Xe[i].warnValue<.25?R.value[i].risk="low":Xe[i].warnValue<.5?R.value[i].risk="middle":R.value[i].risk="high"},nt=(i,l)=>{i.addLayer({id:"mzsBankLineLowRisk",type:"line",source:"mzsBankLineSource","source-layer":"default",layout:{"line-cap":"round","line-join":"round"},paint:{"line-opacity":1,"line-color":["match",["get","name"],"JC01",`${l.value[0].color}`,"JC02",`${l.value[1].color}`,"JC03",`${l.value[2].color}`,"JC04",`${l.value[3].color}`,"JC05",`${l.value[4].color}`,"JC06",`${l.value[5].color}`,"JC07",`${l.value[6].color}`,"JC08",`${l.value[7].color}`,"JC09",`${l.value[8].color}`,"JC10",`${l.value[9].color}`,"JC11",`${l.value[10].color}`,"JC12",`${l.value[11].color}`,"rgb(255, 255, 255)"],"line-width":3}},"mzsSectionLabelLayer")};return xt(async()=>{await Qt(L.value).then(async i=>{y=i,Et(i),i.addSource("mzsPlaceLabelSource",{type:"vector",tiles:[e+"/tile/vector/mzsPlaceLabel/{x}/{y}/{z}"]}),i.addSource("mzsPlaceLineSource",{type:"vector",tiles:[e+"/tile/vector/mzsPlaceLine/{x}/{y}/{z}"]}),i.addSource("mzsBankAreaSSource",{type:"vector",tiles:[e+"/tile/vector/mzsBankAreaOne/{x}/{y}/{z}"]}),i.addSource("mzsBankLineSource",{type:"vector",tiles:[e+"/tile/vector/mzsBankLine/{x}/{y}/{z}"]}),i.addSource("dockAreaSource",{type:"vector",tiles:[e+"/tile/vector/dockArea/{x}/{y}/{z}"]}),i.addSource("dockAreaLabelSource",{type:"vector",tiles:[e+"/tile/vector/center/dockArea/{x}/{y}/{z}"]}),i.addSource("fixProjectAreaSource",{type:"vector",tiles:[e+"/tile/vector/fixProjectArea/{x}/{y}/{z}"]}),i.addSource("fixProjectLineSource",{type:"vector",tiles:[e+"/tile/vector/fjsFixLine/{x}/{y}/{z}"]}),i.addSource("fixProjectAreaLabelSource",{type:"vector",tiles:[e+"/tile/vector/center/fixProjectArea/{x}/{y}/{z}"]}),i.addSource("riverPlaceLabel",{type:"vector",tiles:[e+"/tile/vector/placeLabel/{x}/{y}/{z}"]}),i.addSource("riverBeachSource",{type:"vector",tiles:[e+"/tile/vector/riverBeach/{x}/{y}/{z}"]}),i.addSource("zjgLine",{type:"vector",tiles:[e+"/tile/vector/zjgBridgeLine/{x}/{y}/{z}"]}),i.addLayer({id:"riverBeachArea",type:"fill",source:"riverBeachSource","source-layer":"default",paint:{"fill-color":"rgba(210,244,247, 1)"}}),i.addLayer({id:"zjgBridge",type:"line",source:"zjgLine","source-layer":"default",layout:{"line-cap":"round","line-join":"round"},paint:{"line-opacity":.6,"line-color":"rgb(183, 189, 183)","line-width":2}}),st(i,23032209,"mapRaster"),i.setLayoutProperty("mapRaster","visibility","none"),i.addLayer(new oa(14)),i.setLayoutProperty("TerrainLayer","visibility","none"),i.addLayer({id:"mzsLine",type:"line",source:"mzsPlaceLineSource","source-layer":"default",layout:{"line-cap":"round","line-join":"round"},paint:{"line-opacity":1,"line-color":"rgba(26, 87, 138, 0.6)","line-width":2}}),i.addLayer({id:"fjsFixLine",type:"line",source:"fixProjectLineSource","source-layer":"default",layout:{"line-cap":"round","line-join":"round"},paint:{"line-opacity":1,"line-color":"rgba(216, 217, 228, 0.5)","line-width":4}}),i.addLayer({id:"fixProjectFillLayer",type:"fill",source:"fixProjectAreaSource","source-layer":"default",paint:{"fill-color":"rgba(220,224,237, 0.8)","fill-outline-color":"rgba(220,224,237, 0.8)"}}),i.addLayer({id:"fixProjectAreaLabel",type:"symbol",source:"fixProjectAreaLabelSource","source-layer":"default",layout:{"text-field":["get","layer"],"text-font":["Open Sans Semibold","Arial Unicode MS Bold"],"text-anchor":"right","text-size":12},paint:{"text-color":"rgba(31, 44, 126, 0.6)"}}),i.addLayer({id:"mzsLabel",type:"symbol",source:"mzsPlaceLabelSource","source-layer":"default",layout:{"text-field":["get","label"],"text-font":["Open Sans Semibold","Arial Unicode MS Bold"],"text-anchor":"left"},paint:{"text-color":"rgba(31, 14, 126, 0.75)"}}),i.addLayer({id:"dockArea",type:"fill",source:"dockAreaSource","source-layer":"default",paint:{"fill-color":"rgb(172,214,239)"}}),i.addLayer({id:"dockAreaLabel",type:"symbol",source:"dockAreaLabelSource","source-layer":"default",layout:{"text-field":["get","project_name"],"text-font":["Open Sans Semibold","Arial Unicode MS Bold"],"text-anchor":"bottom","text-size":12},paint:{"text-color":"rgba(31, 44, 126, 0.6)"}}),i.addLayer({id:"riverPlaceLabel",type:"symbol",source:"riverPlaceLabel","source-layer":"default",layout:{"text-field":["get","label"],"text-font":["Open Sans Semibold","Arial Unicode MS Bold"],"text-anchor":"left","text-size":18},paint:{"text-color":"rgba(31, 44, 226, 1)"}}),i.addSource("mzsSectionLabel",{type:"vector",tiles:[e+"/tile/vector/geomCenter/mzsBankLine/{x}/{y}/{z}"]});const l={type:"FeatureCollection",features:[{type:"Feature",properties:{label:"潮位点"},geometry:{type:"Point",coordinates:[120.522864,32.035502]}}]};i.addSource("chaoWeiPoint",{type:"geojson",data:l}),i.addLayer({id:"chaoWeiPoint",type:"circle",source:"chaoWeiPoint",paint:{"circle-radius":7,"circle-color":"rgb(255, 0,0)"}}),i.addLayer({id:"chaoWeiPointLable",type:"symbol",source:"chaoWeiPoint",layout:{"text-field":["get","label"],"text-font":["Open Sans Semibold","Arial Unicode MS Bold"],"text-anchor":"top","text-offset":[0,.5],"text-size":18,"text-allow-overlap":!0},paint:{"text-color":"rgb(255,255,255)"}},"chaoWeiPoint"),i.addLayer(new Ta(yt),"chaoWeiPoint"),i.addLayer({id:"mzsBankLineChoosen",type:"line",source:"mzsBankLineSource","source-layer":"default",filter:R.value[1].filter,layout:{"line-cap":"round","line-join":"round"},paint:{"line-opacity":1,"line-color":"rgb(134, 245, 230)","line-width":10}},"chaoWeiPoint"),i.addLayer({id:"mzsSectionLabelLayer-important",type:"symbol",source:"mzsSectionLabel","source-layer":"default",maxzoom:12,minzoom:8,filter:["==","label","MZ08海事码头"],layout:{"text-field":["get","label"],"text-font":["Open Sans Semibold","Arial Unicode MS Bold"],"text-offset":[-1,1.15],"text-anchor":"top","text-size":18,"text-allow-overlap":!0},paint:{"text-color":"rgb(100, 2, 125)"}},"chaoWeiPoint"),i.addLayer({id:"mzsSectionLabelLayer",type:"symbol",source:"mzsSectionLabel","source-layer":"default",maxzoom:22,minzoom:12,layout:{"text-field":["get","label"],"text-font":["Open Sans Semibold","Arial Unicode MS Bold"],"text-offset":[-1,1.15],"text-anchor":"top","text-size":18,"text-allow-overlap":!0},paint:{"text-color":"rgb(0, 22, 145)"}},"chaoWeiPoint"),fe().setMap(i)}),je(),Ee.value=!1,Ze.value=!1,ne.value=!1,ge.value=!1,et.value=!1,tt.value=!1,J.value=!1,await Ge(oe,se,De,Ce),ye()}),gt(()=>{fe().getMap().remove(),fe().destroyMap()}),(i,l)=>{const p=I("dv-border-box-12"),f=I("el-input"),T=I("el-button"),m=I("el-dialog"),N=I("dv-loading"),V=I("More"),he=I("el-icon"),$=I("el-table-column"),Ht=I("el-table"),$t=ea("draggable");return S(),P("div",Ea,[c("div",{class:"map-container",id:"map",ref_key:"mapContainer",ref:L},null,512),ya,c("div",Sa,[c("div",{class:Ie(["risk-item",{active:le.value}])},[c("div",{class:"risk-main-index waterpower",onClick:ye},[le.value?(S(),X(p,{key:0})):A("",!0),Aa])],2),c("div",{class:Ie(["risk-item",{active:H.value}])},[c("div",{class:"risk-main-index riverbed",onClick:ke},[H.value?(S(),X(p,{key:0,color:["rgb(73, 164, 101)","#9cf3e0"]})):A("",!0),wa])],2),c("div",{class:Ie(["risk-item",{active:Q.value}])},[c("div",{class:"risk-main-index bankGeology",onClick:Ne},[Q.value?(S(),X(p,{key:0,color:["rgb(153, 143, 199)","rgb(231, 161, 240)"]})):A("",!0),Fa])],2)]),q.value?(S(),P("div",Ba,[c("label",La,[c("input",{type:"checkbox",checked:_.value,onClick:l[0]||(l[0]=O=>Je())},null,8,Ua),Da]),Ca])):A("",!0),c("div",Ma,[c("label",Pa,[c("input",{type:"checkbox",checked:z.value,onClick:l[1]||(l[1]=O=>Lt())},null,8,ka),Na]),Oa]),c("div",Ia,[c("label",za,[c("input",{type:"checkbox",checked:K.value,onClick:l[2]||(l[2]=O=>Ut())},null,8,Va),Xa]),ja]),Ga,Ee.value?(S(),P("div",Ya,Ha)):A("",!0),Ee.value?(S(),P("div",$a,[c("div",Za,[c("div",Ka,[qa,me(" 高风险区域集中在： "),c("span",Qa,xe(St("high")),1)])])])):A("",!0),Ze.value?(S(),X(C(t),{key:3,onProfileValueChange:Te,profileData:k.value,profileList:R.value,shapeChartLoad:ue.value,erosionChartLoad:de.value},null,8,["profileData","profileList","shapeChartLoad","erosionChartLoad"])):A("",!0),A("",!0),ne.value?(S(),X(C(n),{key:5,onProfileValueChange:Te,profileData:k.value,profileDataCompare:ve.value,profileList:R.value,shapeChartLoad:ue.value},null,8,["profileData","profileDataCompare","profileList","shapeChartLoad"])):A("",!0),ge.value?(S(),X(C(h),{key:6,onProfileValueChange:Te,profileData:k.value,profileList:R.value,slopeChartLoad:Se.value},null,8,["profileData","profileList","slopeChartLoad"])):A("",!0),et.value?(S(),X(C(o),{key:7,onProfileValueChange:Te,profileData:k.value,profileList:R.value,slopeChartLoad:de.value},null,8,["profileData","profileList","slopeChartLoad"])):A("",!0),Me.value?(S(),P("div",ga,[w(C(v))])):A("",!0),J.value?(S(),X(C(s),{key:9,profileList:R.value,flowspeedChartLoad:Oe.value,type:Y.value,onConditionChange:Rt},null,8,["profileList","flowspeedChartLoad","type"])):A("",!0),J.value?(S(),P("div",er,[c("label",tr,[c("input",{type:"checkbox",checked:E.value,onClick:l[3]||(l[3]=O=>We())},null,8,ar),rr]),ir])):A("",!0),J.value?(S(),P("div",or,[w(pa,{type:"exp","time-step":D.value,"total-count":25},null,8,["time-step"])])):A("",!0),Pe.value?(S(),P("div",sr,[w(C(b),{timeStep:D.value,type:Y.value},null,8,["timeStep","type"])])):A("",!0),Q.value?(S(),X(C(F),{key:13})):A("",!0),tt.value?ze((S(),P("div",nr,[w(C(r),{profileList:R.value},null,8,["profileList"])])),[[$t,{bounds:"body",cancel:"div.content"}]]):A("",!0),_.value&&q.value?(S(),P("div",lr,dr)):A("",!0),w(m,{modelValue:Ae.value,"onUpdate:modelValue":l[5]||(l[5]=O=>Ae.value=O),title:"绘制断面确认",width:"40vh"},{footer:U(()=>[c("div",hr,[c("div",fr,[w(T,{onClick:jt},{default:U(()=>[me("取消")]),_:1}),w(T,{type:"primary",onClick:Gt},{default:U(()=>[me(" 确认 ")]),_:1})])])]),default:U(()=>[cr,w(f,{modelValue:g.value,"onUpdate:modelValue":l[4]||(l[4]=O=>g.value=O),style:{width:"240px","margin-bottom":"10px","margin-left":"2vw"},placeholder:"请输入断面名称",clearable:""},null,8,["modelValue"])]),_:1},8,["modelValue"]),w(m,{modelValue:we.value,"onUpdate:modelValue":l[6]||(l[6]=O=>we.value=O),title:"切换场景确认",width:"40vh"},{footer:U(()=>[c("div",xr,[c("div",Tr,[w(T,{onClick:At},{default:U(()=>[me("取消")]),_:1}),w(T,{type:"primary",onClick:wt},{default:U(()=>[me(" 确认 ")]),_:1})])])]),default:U(()=>[mr,c("div",pr,xe(C(oe).name),1),c("div",vr,xe(C(se).name),1)]),_:1},8,["modelValue"]),ze(c("div",br,[w(N,{class:"loading-icon"},{default:U(()=>[c("div",_r,xe(x.value),1)]),_:1})],512),[[dt,ce.value]]),c("div",Rr,[c("div",Er,[me(" 实时水文信息 "),w(he,{onClick:l[7]||(l[7]=O=>d.value=!d.value),style:{"margin-left":"50%"},class:"iconn"},{default:U(()=>[w(V)]),_:1})]),ze(w(Ht,{data:_t,border:"",style:{width:"15vw"}},{default:U(()=>[w($,{prop:"station",label:"站点"}),w($,{prop:"flow",label:"流量"}),w($,{prop:"level",label:"水位"})]),_:1},512),[[dt,d.value]])])])}}},Fr=Tt(yr,[["__scopeId","data-v-0bb7a413"]]);export{Fr as default};
