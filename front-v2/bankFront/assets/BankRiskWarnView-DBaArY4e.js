const __vite__fileDeps=["assets/riskResult-CpMJwEZK.js","assets/index-Bdok3Q-i.js","assets/index-CFRf1F3o.css","assets/riskResult-ATSSiHG3.css","assets/flowspeedInfo-C7Nzm5cL.js","assets/util-CdhLeOup.js","assets/flowspeedInfo-BKHeoSfn.css","assets/profileInfo-t4YVTjnh.js","assets/profileInfo-V_w5SQ9g.css","assets/profileShapeCompare-JGOHP-ju.js","assets/profileShapeCompare-BlwgbW8Y.css","assets/profileSlope-MiAQ4P11.js","assets/profileSlope-BElbQp6g.css","assets/profileErosion-CSbB5PRL.js","assets/profileErosion-CF4DUzMW.css","assets/BedFlowChart-BXPX5_FK.js","assets/BedFlowChart-CVy3bx83.css","assets/WaterProcessChart-BWwj9hzc.js","assets/WaterProcessChart-_RqpagCP.css","assets/GeologyAndProject-C55FAzyy.js","assets/GeologyAndProject-BdX_dTSd.css"],__vite__mapDeps=i=>i.map(i=>__vite__fileDeps[i]);
import{a_ as Zt,a$ as st,aO as gt,v as pt,a9 as qt,g as Re,h as xt,i as I,o as w,c as M,b as E,d as A,a as s,t as pe,aU as Ce,_ as yt,J as lt,f as n,a7 as Kt,x as he,z as Qt,A as ea,j as Ie,k as O,O as L,D as ve,u as P,B as ze,C as ct,a2 as bt,a4 as ut,w as dt,p as ta,e as aa,b0 as X,a5 as Ae,aH as G}from"./index-Bdok3Q-i.js";import"./index-DwQNfRTx.js";import{F as ht}from"./notSimpleLayer-CJCKLvoH.js";import{M as oa}from"./mapbox-gl-draw-DO4UArkg.js";function ra(t=5){function e(x,S){return[(x[0]+S[0])/2,(x[1]+S[1])/2]}const o=[],c=[],r=new Map;function l(x){const S=x.join("-");return r.has(S)||r.set(S,c.length/2),c.push(x[0]),c.push(x[1]),x}const m=l([0,1]),v=l([0,0]),y=l([1,1]),C=l([1,0]),ee={fst:m,snd:v,ted:C,level:0},b={fst:C,snd:y,ted:m,level:0},U=[];U.push(ee),U.push(b);const F=[];for(;U.length;){const x=U.pop(U);if(x.level>=t){F.push(x);continue}const S=x.fst,_=x.snd,z=x.ted,Z=l(e(S,z));U.push({fst:S,snd:Z,ted:_,level:x.level+.5}),U.push({fst:z,snd:Z,ted:_,level:x.level+.5})}return F.forEach(x=>{const S=x.fst.join("-"),_=x.snd.join("-"),z=x.ted.join("-");o.push(r.get(S)),o.push(r.get(_)),o.push(r.get(z))}),{positions:c,indices:o}}class Ve{constructor(e=0,o=0,c=void 0){this.parent=c,this.level=e,this.id=o,this.size=180/Math.pow(2,e);const r=this.id%4,l=(this.parent?this.parent.bBox.boundary.x:-180)+r%2*this.size,m=l+this.size,v=(this.parent?this.parent.bBox.boundary.y:-90)+Math.floor(r/2)*this.size,y=v+this.size;this.bBox=new Zt(l,v,m,y),this.children=[]}release(){return this.bBox=this.bBox.release(),this.children=null,this.parent=null,this.level=null,this.size=null,this.id=null,null}isSubdividable(e){const o=this.bBox.center,c=Math.ceil(Math.abs(o[0]-e.cameraPos[0])/this.size),r=Math.ceil(Math.abs(o[1]-e.cameraPos[1])/this.size);return Math.max(c,r)<=2}}class ia{constructor(e){this.type="custom",this.map=void 0,this.id="TerrainLayer",this.renderingMode="3d",this.asLine=!1,this.nodeCount=0,this.maxLevel=e,this.maxNodeCount=1e3,this.sectorSize=32,this.sectorRange=[0,0],this.exaggeration=50,this.tileBox=st(),this.lodMapSize=[512,512],this.visibleNodeLevel=[0,this.maxLevel],this.elevationRange=[-80.06899999999999,4.3745],this.boundaryCondition=st(120.04373606134682,31.173901952209487,121.96623240116922,32.08401085804678),this.nodeLevelArray=new Uint32Array(this.maxNodeCount),this.nodeBoxArray=new Float32Array(this.maxNodeCount*4),this.interval=5,this.color=[0,0,0],this.indexNum=0}onAdd(e,o){this.map=e;const{positions:c,indices:r}=ra(Math.log2(this.sectorSize));this.positionArray=new Float32Array(c),this.indexNum=r.length,this.indexTextureSize=Math.ceil(Math.sqrt(r.length)),this.positionTextureSize=Math.ceil(Math.sqrt(c.length/2)),this.indexTextureArray=new Uint32Array(this.indexTextureSize*this.indexTextureSize),r.forEach((y,C)=>{this.indexTextureArray[C]=y}),this.positionTextureArray=new Float32Array(this.positionTextureSize*this.positionTextureSize*2),c.forEach((y,C)=>{this.positionTextureArray[C]=y});const l=new gt,m=l.addFolder("Contour");m.add(this,"interval",.1,20).onChange(()=>this.map.triggerRepaint()),m.addColor(this,"color").onChange(()=>this.map.triggerRepaint()),m.open();const v=l.addFolder("Terrain");v.add(this,"asLine",!1).onChange(()=>this.map.triggerRepaint()),v.add(this,"exaggeration",1,100).onChange(()=>this.map.triggerRepaint()),v.add(this,"maxLevel",14,20,1).onChange(()=>this.map.triggerRepaint()),v.open(),l.hide(),this.init(o)}async init(e){this.isInitialized=!1,na(e),this.canvasWidth=e.canvas.width,this.canvasHeight=e.canvas.height,this.normalShader=await fe(e,"/scratchSomething/terrainWebGL/shader/normal.glsl"),this.lodMapShader=await fe(e,"/scratchSomething/terrainWebGL/shader/lodMap.glsl"),this.dLodMapShader=await fe(e,"/scratchSomething/terrainWebGL/shader/dLodMap.glsl"),this.terrainLineShader=await fe(e,"/scratchSomething/terrainWebGL/shader/terrainMeshLine.glsl"),this.terrainMeshShader=await fe(e,"/scratchSomething/terrainWebGL/shader/terrainMesh.glsl"),this.terrainShader=this.asLine?this.terrainLineShader:this.terrainMeshShader,this.showShader=await fe(e,"/scratchSomething/terrainWebGL/shader/terrainLayer.glsl");const o=await ft("/scratchSomething/terrainWebGL/image/dem.png"),c=await ft("/scratchSomething/terrainWebGL/image/contourPalette1D.png");this.demTexture=k(e,o.width,o.height,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,o),this.paletteTexture=k(e,c.width,c.height,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,c),this.boxTexture=k(e,this.nodeBoxArray.length/4,1,e.RGBA32F,e.RGBA,e.FLOAT,this.nodeBoxArray),this.levelTexture=k(e,this.nodeLevelArray.length,1,e.R32UI,e.RED_INTEGER,e.UNSIGNED_INT,this.nodeLevelArray),this.indexTexture=k(e,this.indexTextureSize,this.indexTextureSize,e.R32UI,e.RED_INTEGER,e.UNSIGNED_INT,this.indexTextureArray),this.positionTexture=k(e,this.positionTextureSize,this.positionTextureSize,e.RG32F,e.RG,e.FLOAT,this.positionTextureArray),this.normalTexture=k(e,o.width,o.height,e.RGB8,e.RGB,e.UNSIGNED_BYTE);const r=Pe(e,[this.normalTexture]);e.bindFramebuffer(e.FRAMEBUFFER,r),e.viewport(0,0,o.width,o.height),e.clearColor(0,0,0,0),e.clear(e.COLOR_BUFFER_BIT),e.useProgram(this.normalShader),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,this.demTexture),e.uniform1i(e.getUniformLocation(this.normalShader,"demTexture"),0),e.uniform1f(e.getUniformLocation(this.normalShader,"exaggeration"),this.exaggeration),e.uniform2fv(e.getUniformLocation(this.normalShader,"e"),new Float32Array(this.elevationRange)),e.drawArrays(e.TRIANGLE_STRIP,0,4),this.lodMapTexture=k(e,this.lodMapSize[0],this.lodMapSize[1],e.R32UI,e.RED_INTEGER,e.UNSIGNED_INT),this.dLodMapTexture=k(e,this.lodMapSize[0],this.lodMapSize[1],e.R32UI,e.RED_INTEGER,e.UNSIGNED_INT),this.layerDepthTexture=k(e,this.canvasWidth,this.canvasHeight,e.DEPTH_COMPONENT24,e.DEPTH_COMPONENT,e.UNSIGNED_INT),this.layerTexture=k(e,this.canvasWidth,this.canvasHeight,e.RGBA32F,e.RGBA,e.FLOAT),this.layerTextureMaxMipLevel=ca(this.canvasWidth,this.canvasHeight),this.layerRenderBuffer=sa(e,this.canvasWidth,this.canvasHeight),this.lodMapPass=Pe(e,[this.lodMapTexture]),this.dLodMapPass=Pe(e,[this.dLodMapTexture]),this.layerPass=Pe(e,[this.layerTexture],this.layerDepthTexture),this.isInitialized=!0}render(e,o){if(!this.isInitialized)return;this.map.update(),this.registerRenderableNode({cameraPos:this.map.mercatorCenter.toLngLat().toArray(),cameraBounds:this.map.cameraBounds,zoomLevel:this.map.getZoom()}),vt(e,this.boxTexture,this.nodeBoxArray.length/4,1,e.RGBA32F,e.RGBA,e.FLOAT,this.nodeBoxArray),vt(e,this.levelTexture,this.nodeLevelArray.length,1,e.R32UI,e.RED_INTEGER,e.UNSIGNED_INT,this.nodeLevelArray),e.bindFramebuffer(e.FRAMEBUFFER,this.lodMapPass),e.viewport(0,0,this.lodMapSize[0],this.lodMapSize[1]);const c=new Uint32Array([0,0,0,0]);e.clearBufferuiv(e.COLOR,0,c),e.useProgram(this.lodMapShader),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,this.boxTexture),e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,this.levelTexture),e.uniform1i(e.getUniformLocation(this.lodMapShader,"boxTexture"),0),e.uniform1i(e.getUniformLocation(this.lodMapShader,"levelTexture"),1),e.uniform2fv(e.getUniformLocation(this.lodMapShader,"dimensions"),new Float32Array(this.lodMapSize)),e.uniform2fv(e.getUniformLocation(this.lodMapShader,"sectorRange"),new Float32Array(this.sectorRange)),e.uniform4fv(e.getUniformLocation(this.lodMapShader,"tileBox"),new Float32Array(this.tileBox.boundary.xyzw)),e.drawArraysInstanced(e.TRIANGLE_STRIP,0,4,this.nodeCount),e.bindFramebuffer(e.FRAMEBUFFER,this.dLodMapPass),e.viewport(0,0,this.lodMapSize[0],this.lodMapSize[1]),e.clearBufferuiv(e.COLOR,0,new Uint32Array([0,0,0,0])),e.useProgram(this.dLodMapShader),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,this.lodMapTexture),e.uniform1i(e.getUniformLocation(this.lodMapShader,"lodMap"),0),e.drawArrays(e.TRIANGLE_STRIP,0,4),this.terrainShader=this.asLine?this.terrainLineShader:this.terrainMeshShader,e.bindFramebuffer(e.FRAMEBUFFER,this.layerPass),e.viewport(0,0,this.canvasWidth,this.canvasHeight),e.clearColor(1e3,0,0,0),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT),e.enable(e.DEPTH_TEST),e.disable(e.BLEND),e.useProgram(this.terrainShader),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,this.indexTexture),e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,this.positionTexture),e.activeTexture(e.TEXTURE2),e.bindTexture(e.TEXTURE_2D,this.levelTexture),e.activeTexture(e.TEXTURE3),e.bindTexture(e.TEXTURE_2D,this.boxTexture),e.activeTexture(e.TEXTURE4),e.bindTexture(e.TEXTURE_2D,this.dLodMapTexture),e.activeTexture(e.TEXTURE5),e.bindTexture(e.TEXTURE_2D,this.demTexture),e.activeTexture(e.TEXTURE6),e.bindTexture(e.TEXTURE_2D,this.normalTexture),e.uniform1i(e.getUniformLocation(this.terrainShader,"indicesTexture"),0),e.uniform1i(e.getUniformLocation(this.terrainShader,"positionsTexture"),1),e.uniform1i(e.getUniformLocation(this.terrainShader,"levelTexture"),2),e.uniform1i(e.getUniformLocation(this.terrainShader,"boxTexture"),3),e.uniform1i(e.getUniformLocation(this.terrainShader,"dLodMap"),4),e.uniform1i(e.getUniformLocation(this.terrainShader,"demTexture"),5),e.uniform1i(e.getUniformLocation(this.terrainShader,"normalTexture"),6),e.uniform1f(e.getUniformLocation(this.terrainShader,"sectorSize"),this.sectorSize),e.uniform1f(e.getUniformLocation(this.terrainShader,"worldSize"),this.map.WORLD_SIZE),e.uniform1f(e.getUniformLocation(this.terrainShader,"exaggeration"),this.exaggeration),e.uniform2fv(e.getUniformLocation(this.terrainShader,"centerHigh"),this.map.centerHigh),e.uniform2fv(e.getUniformLocation(this.terrainShader,"centerLow"),this.map.centerLow),e.uniform1f(e.getUniformLocation(this.terrainShader,"maxLodLevel"),this.maxVisibleNodeLevel),e.uniform1f(e.getUniformLocation(this.terrainShader,"maxMipLevel"),this.layerTextureMaxMipLevel),e.uniform2fv(e.getUniformLocation(this.terrainShader,"e"),new Float32Array(this.elevationRange)),e.uniform2fv(e.getUniformLocation(this.terrainShader,"sectorRange"),new Float32Array(this.sectorRange)),e.uniform4fv(e.getUniformLocation(this.terrainShader,"tileBox"),new Float32Array(this.tileBox.boundary.xyzw)),e.uniform4fv(e.getUniformLocation(this.terrainShader,"terrainBox"),new Float32Array(this.boundaryCondition.boundary.xyzw)),e.uniformMatrix4fv(e.getUniformLocation(this.terrainShader,"uMatrix"),!1,this.map.relativeEyeMatrix),this.asLine?e.drawArraysInstanced(e.LINES,0,this.indexNum/3*6,this.nodeCount):e.drawArraysInstanced(e.TRIANGLES,0,this.indexNum,this.nodeCount),e.bindFramebuffer(e.FRAMEBUFFER,null),e.viewport(0,0,e.canvas.width,e.canvas.height),e.disable(e.DEPTH_TEST),e.enable(e.BLEND),e.blendFunc(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA),e.useProgram(this.showShader),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,this.layerTexture),e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,this.paletteTexture),e.activeTexture(e.TEXTURE2),e.bindTexture(e.TEXTURE_2D,this.layerDepthTexture),e.activeTexture(e.TEXTURE3),e.bindTexture(e.TEXTURE_2D,this.normalTexture),e.activeTexture(e.TEXTURE4),e.bindTexture(e.TEXTURE_2D,this.lodMapTexture),e.uniform1i(e.getUniformLocation(this.showShader,"srcTexture"),0),e.uniform1i(e.getUniformLocation(this.showShader,"paletteTexture"),1),e.uniform1i(e.getUniformLocation(this.showShader,"depthTexture"),2),e.uniform1i(e.getUniformLocation(this.showShader,"normalTexture"),3),e.uniform1i(e.getUniformLocation(this.showShader,"lodMapTexture"),4),e.uniform1f(e.getUniformLocation(this.showShader,"interval"),this.interval),e.uniform1f(e.getUniformLocation(this.showShader,"asLine"),this.asLine?1:0),e.uniform1f(e.getUniformLocation(this.showShader,"maxMipLevel"),this.layerTextureMaxMipLevel),e.uniform2fv(e.getUniformLocation(this.showShader,"e"),new Float32Array(this.elevationRange)),e.uniform3fv(e.getUniformLocation(this.showShader,"contourColor"),new Float32Array(this.color)),e.drawArrays(e.TRIANGLE_STRIP,0,4);const r=e.getError();r!==e.NO_ERROR&&console.error("Error happened: ",la(e,r))}registerRenderableNode(e){this.tileBox.reset(),this.sectorRange.fill(0),this.nodeCount=0,this.maxVisibleNodeLevel=0,this.minVisibleNodeLevel=this.maxLevel;const o=[],c=[];for(o.push(new Ve(0,0)),o.push(new Ve(0,1));o.length>0;){let r=o.pop();if(r.bBox.overlap(this.boundaryCondition)){if(!r.isSubdividable(e)||r.level>=Math.min(this.maxLevel,e.zoomLevel)){c.push(r),r.level>this.maxVisibleNodeLevel&&(this.sectorRange[0]=r.bBox.size[0],this.sectorRange[1]=r.bBox.size[1],this.maxVisibleNodeLevel=r.level);continue}for(let l=0;l<4;l++)r.children[l]=new Ve(r.level+1,4*r.id+l,r),o.push(r.children[l])}}c.forEach(r=>{(this.nodeCount<this.maxNodeCount||r.level+5>=this.maxVisibleNodeLevel)&&(this.minVisibleNodeLevel=r.level<this.minVisibleNodeLevel?r.level:this.minVisibleNodeLevel,this.tileBox.updateByBox(r.bBox),this.nodeLevelArray[this.nodeCount]=r.level,this.nodeBoxArray[this.nodeCount*4+0]=r.bBox.boundary.x,this.nodeBoxArray[this.nodeCount*4+1]=r.bBox.boundary.y,this.nodeBoxArray[this.nodeCount*4+2]=r.bBox.boundary.z,this.nodeBoxArray[this.nodeCount*4+3]=r.bBox.boundary.w,this.nodeCount++),r.release()})}}function na(t){t.getSupportedExtensions().forEach(o=>{t.getExtension(o)})}async function fe(t,e){let o="";await pt.get(e).then(v=>o+=v.data);const c=m(t,o,t.VERTEX_SHADER),r=m(t,o,t.FRAGMENT_SHADER),l=t.createProgram();return t.attachShader(l,c),t.attachShader(l,r),t.linkProgram(l),t.getProgramParameter(l,t.LINK_STATUS)||console.error("An error occurred linking shader stages: "+t.getProgramInfoLog(l)),l;function m(v,y,C){const ee=`#version 300 es
`,b=v.createShader(C);return C===v.VERTEX_SHADER?y=ee+`#define VERTEX_SHADER
`+y:C===v.FRAGMENT_SHADER&&(y=ee+`#define FRAGMENT_SHADER
`+y),v.shaderSource(b,y),v.compileShader(b),v.getShaderParameter(b,v.COMPILE_STATUS)?b:(console.error("An error occurred compiling the shader module: "+v.getShaderInfoLog(b)),v.deleteShader(b),null)}}function Pe(t,e,o,c){const r=t.createFramebuffer();return t.bindFramebuffer(t.FRAMEBUFFER,r),e?.forEach((l,m)=>{t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+m,t.TEXTURE_2D,l,0)}),o&&t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,o,0),t.bindFramebuffer(t.FRAMEBUFFER,null),t.checkFramebufferStatus(t.FRAMEBUFFER)!==t.FRAMEBUFFER_COMPLETE&&console.error("Framebuffer is not complete"),r}function k(t,e,o,c,r,l,m,v=!1){const y=t.createTexture();return t.bindTexture(t.TEXTURE_2D,y),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,v?t.LINEAR_MIPMAP_LINEAR:t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texImage2D(t.TEXTURE_2D,0,c,e,o,0,r,l,m||null),t.bindTexture(t.TEXTURE_2D,null),y}function vt(t,e,o,c,r,l,m,v){t.bindTexture(t.TEXTURE_2D,e),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texImage2D(t.TEXTURE_2D,0,r,o,c,0,l,m,v),t.bindTexture(t.TEXTURE_2D,null)}function sa(t,e,o){const c=e||t.canvas.width*window.devicePixelRatio,r=o||t.canvas.height*window.devicePixelRatio,l=t.createRenderbuffer();return t.bindRenderbuffer(t.RENDERBUFFER,l),t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_STENCIL,c,r),t.bindRenderbuffer(t.RENDERBUFFER,null),l}function la(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"UNKNOWN_ERROR"}}async function ft(t){try{const e=await fetch(t);if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);const o=await e.blob();return await createImageBitmap(o,{imageOrientation:"flipY",premultiplyAlpha:"none",colorSpaceConversion:"default"})}catch(e){throw console.error(`Error loading image (url: ${t})`,e),e}}function ca(t,e){return Math.floor(Math.log2(Math.max(t,e)))}const ua="/down_triangle.png",da="/rasterLegend1.png",Y=pt.create({baseURL:"/api"});class Q{static runProfileModelTest=e=>{const o=`/taskNode/start/multi/default/section/${e-1}`;return Y.post(o)};static getProfileDataTest=e=>{const o=e<10?`/fileData/json/jsonStr/name/multiWholeRes-JC0${e}/newest`:`/fileData/json/jsonStr/name/multiWholeRes-JC${e}/newest`;return Y.get(o)};static runProfileModel_short=(e,o,c)=>{const r=`/taskNode/start/multi/default/section/${c-1}/beg/${e}/end/${o}`;return Y.post(r)};static runProfileModel_long=(e,o,c)=>{const r=`/taskNode/start/multi/default/section/long/${c-1}/beg/${e}/end/${o}`;return Y.post(r)};static getProfileData=(e,o,c)=>{const r=c<10?`/fileData/json/jsonStr/name/multiWholeRes-JC0${c}_beg${e}_end${o}/newest`:`/fileData/json/jsonStr/name/multiWholeRes-JC${c}_beg${e}_end${o}/newest`;return Y.get(r)};static runProfileModelByLine=(e,o,c,r,l,m)=>{const v=`/taskNode/start/multi/default?begTime=${e}&endTime=${o}&startPt=${c},${r}&endPt=${l},${m}`;return Y.post(v)};static getRunStatus=e=>{const o="/taskNode/"+e+"/status";return Y.get(o)};static getRunResult=e=>{const o="/fileData/json/jsonStr/id/"+e;return Y.get(o)}}const ha={class:"timestep-shower"},va={class:"percentage-value"},fa=qt({__name:"flowTimeShower",props:{timeStep:Number,totalCount:Number,type:String},setup(t){const e=t,o=Re(()=>Math.ceil(e.timeStep/e.totalCount*100)),c=Re(()=>{if(e.type=="normal"){let r=Ce().startOf("day"),l=e.timeStep/6;return r.add(l,"hour").format("YYYY/MM/DD HH")}else if(e.type=="9711"){let r=Ce("1997-08-16").startOf("day"),l=e.timeStep*6;return r.add(l,"hour").format("YYYY/MM/DD HH")}else if(e.type=="9711adwt"){let r=Ce("1997-08-12").startOf("day"),l=e.timeStep*1;return r.add(l,"hour").format("YYYY/MM/DD HH")}else if(e.type=="exp"){let r=Ce().startOf("day").subtract(1,"day"),l=Math.floor(e.timeStep)*1;return r.add(l,"hour").format("YYYY/MM/DD HH")}});return Re(()=>c.value.split(" ")[1]),Re(()=>c.value.split(" ")[0]),xt(()=>{}),(r,l)=>{const m=I("el-progress");return w(),M("div",ha,[E(m,{type:"dashboard",percentage:o.value},{default:A(({percentage:v})=>[s("span",va,pe(Math.floor(e.timeStep)+"时"),1)]),_:1},8,["percentage"])])}}}),ma=yt(fa,[["__scopeId","data-v-93ae3e93"]]);class pa{constructor(e){this.id="岸段预警",this.jsonData=e,this.map=void 0,this.type="custom",this.showLayer=!1,this.prepared=!1,console.log("contruictasd12312",this.jsonData)}async onAdd(e,o){this.map=e,this.vertexData=[],this.warnValues=[],this.vertexCount=0,this.jsonData.forEach(v=>{let y=lt.MercatorCoordinate.fromLngLat({lng:v.coords[0][0],lat:v.coords[0][1]}),C=lt.MercatorCoordinate.fromLngLat({lng:v.coords[1][0],lat:v.coords[1][1]});this.vertexData.push(y.x,y.y,v.warnValue,C.x,C.y,v.warnValue),this.vertexCount+=2});const c=`
        uniform mat4 u_matrix;
        attribute vec3 a_position; 
        varying float v_warnValue; 

        void main() {
            v_warnValue = a_position.z; 
            gl_Position = u_matrix * vec4(a_position.x, a_position.y, 0.0, 1.0);
        }`,r=`
        precision mediump float;
        varying float v_warnValue; 

        void main() {
            // int pallete[10] = {
            //     0x00b0f0,
            //     0x76a9c8,
            //     0xa69f9f,
            //     0xcc9071,
            //     0xed7c31,
            //     0xf06f24,
            //     0xf46018,
            //     0xf84e0d,
            //     0xfb3704,
            //     0xff0000,
            // }
            // int pallete[3] = {
            //     0x00b0f0,
            //     0x76a9c8,
            //     0xff0000,
            // }
            // int botIndex = floor(v_warnValue * 2);
            // int topIndex = floor(v_warnValue * 2 + 0.5);
            // int interval = value * 10.0 - botIndex;

            // vec3 botColor = colorFromInt(rampColors[botIndex]);
            // vec3 topColor = colorFromInt(rampColors[botIndex+1]);
            // vec3 topColor = colorFromInt(rampColors[topIndex]);
            // vec3 resultColor = mix(botColor, topColor, interval);

            // vec3 green = vec3(0.0, 1.0, 0.0);
            vec3 blue = vec3(0.0, 0.0, 1.0);
            vec3 orange = vec3(240.0, 120.0, 0.0) / 255.0;
            vec3 red = vec3(1.0, 0.0, 0.0);
            float v_warnValueP = clamp(v_warnValue*1.4, 0.0, 1.0);


            vec3 greenToBlue = mix(blue, orange, smoothstep(0.0, 0.5, v_warnValueP));
            // Interpolate between blue and red from 0.5 to 1.0
            vec3 blueToRed = mix(orange, red, smoothstep(0.5, 1.0, v_warnValueP));
            // Combine the two interpolations
            vec3 color = mix(greenToBlue, blueToRed, smoothstep(0.0, 1.0, v_warnValueP));

            // gl_FragColor  = vec4(v_warnValueP, 0, 1.0-v_warnValueP, 0.85); // 使用 fragColor 代替 gl_FragColor
            gl_FragColor  = vec4(color, 0.85); // 使用 fragColor 代替 gl_FragColor
        }`,l=o.createShader(o.VERTEX_SHADER);o.shaderSource(l,c),o.compileShader(l);const m=o.createShader(o.FRAGMENT_SHADER);o.shaderSource(m,r),o.compileShader(m),this.program=o.createProgram(),o.attachShader(this.program,l),o.attachShader(this.program,m),o.linkProgram(this.program),this.aPos=o.getAttribLocation(this.program,"a_position"),console.log(this.aPos),this.buffer=o.createBuffer(),o.bindBuffer(o.ARRAY_BUFFER,this.buffer),o.bufferData(o.ARRAY_BUFFER,new Float32Array(this.vertexData),o.STATIC_DRAW),this.prepared=!0}async render(e,o){this.prepared&&(e.useProgram(this.program),e.uniformMatrix4fv(e.getUniformLocation(this.program,"u_matrix"),!1,o),e.bindBuffer(e.ARRAY_BUFFER,this.buffer),e.enableVertexAttribArray(this.aPos),e.vertexAttribPointer(this.aPos,3,e.FLOAT,!1,0,0),e.enable(e.BLEND),e.blendFunc(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA),e.drawArrays(e.TRIANGLE_STRIP,0,this.vertexCount))}show(){}hide(){}}const mt={20092003:{min:-20.216260910034,max:12.377036094666},21032003:{min:-18.057029724121,max:13.405656814575},21032009:{min:-11.904377937317,max:15.555559158325},21092003:{min:-29.0481300354,max:13.405656814575},21092009:{min:-21.573017120361,max:13.338559150696},21092103:{min:-22.064949035645,max:8.261926651001},22032003:{min:-26.315940856934,max:12.661833763123},22032009:{min:-18.946474075317,max:10.854301452637},22032103:{min:-18.682374954224,max:11.998920440674},22032109:{min:-18.682374954224,max:17.446615219116},22092003:{min:-34.24059677124,max:18.287557601929},22092009:{min:-28.642517089844,max:18.124055862427},22092103:{min:-28.885349273682,max:17.996383666992},22092109:{min:-20.775089263916,max:19.373840332031},22092203:{min:-20.959928512573,max:17.246448516846},23032003:{min:-25.497043609619,max:23.978927612305},23032009:{min:-15.159237861633,max:24.311046600342},23032103:{min:-16.9319896698,max:24.412498474121},23032109:{min:-11.673976898193,max:24.870639801025},23032203:{min:-10.602119445801,max:19.81965637207},23032209:{min:-10.008462905884,max:21.046541213989},23092003:{min:-24.543750762939,max:23.484636306763},23092009:{min:-14.633073806763,max:23.901466369629},23092103:{min:-15.942059516907,max:23.92653465271},23092109:{min:-12.148267745972,max:24.699771881104},23092203:{min:-11.635368347168,max:19.993438720703},23092209:{min:-11.635368347168,max:26.141702651978},23092303:{min:-11.635368347168,max:16.081762313843}},Oe=[{name:"JC01",coords:[[120.49989610501109,32.044845778820694],[120.49965852902085,32.043054010465546]],warnValue:.49},{name:"JC02",coords:[[120.51211644811006,32.04310480824947],[120.51157809855385,32.04135665004222]],warnValue:.59},{name:"JC03",coords:[[120.51598399026375,32.04244111945512],[120.51554162835052,32.04064910386879]],warnValue:.64},{name:"JC04",coords:[[120.52163733002358,32.040317481106044],[120.52010747944439,32.03901766791365]],warnValue:.67},{name:"JC05",coords:[[120.52344753736321,32.03912224359854],[120.52202732882418,32.037765786589944]],warnValue:.76},{name:"JC06",coords:[[120.5300568728269,32.035076196597906],[120.52886185568613,32.03359585101801]],warnValue:.83},{name:"JC07",coords:[[120.53577029390934,32.03306474923213],[120.53521759568126,32.03132371065091]],warnValue:.9},{name:"JC08",coords:[[120.54259039936055,32.03113531223312],[120.54191211481913,32.0294311450221]],warnValue:.73},{name:"JC09",coords:[[120.54845619793755,32.02942703528161],[120.547645906125,32.027757714058616]],warnValue:.53},{name:"JC10",coords:[[120.55217332294447,32.02819103999115],[120.55139957273384,32.02651468780271]],warnValue:.43},{name:"JC11",coords:[[120.55987007042168,32.0256085153387],[120.55938372124096,32.02385317986381]],warnValue:.29},{name:"JC12",coords:[[120.56542283954619,32.023997421425335],[120.56490201809913,32.022254233310434]],warnValue:.18}],xa=[{value:1,id:"JC01",label:"MZ01围堤",name:"MZ01围堤",nickname:"围堤",filter:["==","name","JC01"],flowspeed:null,risk:null,color:null},{value:2,id:"JC02",label:"MZ02顺堤",name:"MZ02顺堤",nickname:"顺堤",filter:["==","name","JC02"],flowspeed:null,risk:null,color:null},{value:3,id:"JC03",label:"MZ03顺堤尾",name:"MZ03顺堤尾",nickname:"顺堤尾",filter:["==","name","JC03"],flowspeed:null,risk:null,color:null},{value:4,id:"JC04",label:"MZ04江滩办",name:"MZ04江滩办",nickname:"江滩办",filter:["==","name","JC04"],flowspeed:null,risk:null,color:null},{value:5,id:"JC05",label:"MZ05小港池",name:"MZ05小港池",nickname:"小港池",filter:["==","name","JC05"],flowspeed:null,risk:null,color:null},{value:6,id:"JC06",label:"MZ06张靖皋桥位",name:"MZ06张靖皋桥位",nickname:"张靖皋桥位",filter:["==","name","JC06"],flowspeed:null,risk:null,color:null},{value:7,id:"JC07",label:"MZ07桥位下游",name:"MZ07桥位下游",nickname:"桥位下游",filter:["==","name","JC07"],flowspeed:null,risk:null,color:null},{value:8,id:"JC08",label:"MZ08海事码头",name:"MZ08海事码头",nickname:"海事码头",filter:["==","name","JC08"],flowspeed:null,risk:null,color:null},{value:9,id:"JC09",label:"MZ09码头下游",name:"MZ09码头下游",nickname:"码头下游",filter:["==","name","JC09"],flowspeed:null,risk:null,color:null},{value:10,id:"JC10",label:"MZ10雷达站",name:"MZ10雷达站",nickname:"雷达站",filter:["==","name","JC10"],flowspeed:null,risk:null,color:null},{value:11,id:"JC11",label:"MZ11主路",name:"MZ11主路",nickname:"主路",filter:["==","name","JC11"],flowspeed:null,risk:null,color:null},{value:12,id:"JC12",label:"MZ12沙尾",name:"MZ12沙尾",nickname:"沙尾",filter:["==","name","JC12"],flowspeed:null,risk:null,color:null}],ya=[{value:"1999before",name:"1999汛前地形数据",label:"1999汛前",year:"1999",time:"汛前",date:"1999-01-01",dateShort:"9901"},{value:"2012after",name:"2012汛后地形数据",label:"2012汛后",year:"2012",time:"汛后",date:"2012-10-01",dateShort:"1210"},{value:"2019before",name:"2019汛前地形数据",label:"2019汛前",year:"2019",time:"汛前",date:"2019-04-01",dateShort:"1904"},{value:"2023before1",name:"2023汛前地形数据",label:"2023汛前",year:"2023",time:"汛前",date:"2023-04-01",dateShort:"2304"},{value:"2020before",name:"2020汛前地形数据",label:"2020汛前",year:"2020",time:"汛前",date:"2020-03-01",dateShort:"2003"},{value:"2020before",name:"2020汛前地形数据",label:"2020汛前",year:"2020",time:"汛前",date:"2020-03-01",dateShort:"2003"},{value:"2020after",name:"2020汛后地形数据",label:"2020汛后",year:"2020",time:"汛后",date:"2020-09-01",dateShort:"2009"},{value:"2021before",name:"2021汛前地形数据",label:"2021汛前",year:"2021",time:"汛前",date:"2021-03-01",dateShort:"2103"},{value:"2021after",name:"2021汛后地形数据",label:"2021汛后",year:"2021",time:"汛后",date:"2021-09-01",dateShort:"2109"},{value:"2022before",name:"2022汛前地形数据",label:"2022汛前",year:"2022",time:"汛前",date:"2022-03-01",dateShort:"2203"},{value:"2022after",name:"2022汛后地形数据",label:"2022汛后",year:"2022",time:"汛后",date:"2022-09-01",dateShort:"2209"},{value:"2023before",name:"2023汛前地形数据",label:"2023汛前",year:"2023",time:"汛前",date:"2023-03-01",dateShort:"2303"},{value:"2023after",name:"2023汛后地形数据",label:"2023汛后",year:"2023",time:"汛后",date:"2023-09-01",dateShort:"2309"}],ba=[{label:"水流动力因素",active:!1,children:[{label:"造床流量当量指标",icon:"/icons/行政区划.png",active:!1,filter:!0},{label:"流速指标",icon:"/icons/河道分段.png",active:!1,filter:!0},{label:"水位变幅指标",icon:"/icons/流域水系.png",active:!1,filter:!0}]},{label:"河床演变因素",active:!1,filter:!0,children:[{label:"岸坡最大坡比",icon:"/icons/江堤港堤.png",active:!1,filter:!0},{label:"近岸冲刷速率",icon:"/icons/长江堤防.png",active:!1,filter:!0},{label:"滩槽高程",icon:"/icons/过江通道.png",active:!1,filter:!0}]},{label:"岸坡地质因素",active:!1,filter:!0,children:[{label:"河岸组成粒径",icon:"/icons/岸段名录.png",active:!1,filter:!0},{label:"垂向分层结构",icon:"/icons/过江通道.png",active:!1,filter:!0}]},{label:"外部工程因素",active:!1,filter:!0,children:[{label:"护岸强度",icon:"/icons/岸段名录.png",active:!1,filter:!0},{label:"局部突加荷载",icon:"/icons/过江通道.png",active:!1,filter:!0}]}],R=t=>(ta("data-v-0bb7a413"),t=t(),aa(),t),_a={class:"risk-warn-container"},Ta=bt('<canvas id="GPUFrame" data-v-0bb7a413></canvas><div class="basic-info-container" data-v-0bb7a413><div class="basic-info-content" data-v-0bb7a413><div class="title-container" data-v-0bb7a413>民主沙右缘示范段</div><div class="key-val-container" data-v-0bb7a413><div class="key-text" data-v-0bb7a413>预警级别：</div><div class="val-text" data-v-0bb7a413>Ⅰ级</div></div><div class="key-val-container right" data-v-0bb7a413><div class="key-text" data-v-0bb7a413>岸段长度：</div><div class="val-text" data-v-0bb7a413>全长7公里</div></div></div></div><div class="risk-item-title" data-v-0bb7a413>崩岸风险因素分析</div>',3),wa={class:"risk-item-container"},La=R(()=>s("div",{class:"risk-item-text"},"水流动力",-1)),Ea=R(()=>s("div",{class:"risk-item-text"},"河床演变",-1)),Sa=R(()=>s("div",{class:"risk-item-text"},"地质与工程治理",-1)),Ra={key:0,class:"raster-control-block"},Ca={class:"switch"},Aa=["checked"],Pa=R(()=>s("span",{class:"slider"},null,-1)),ka=R(()=>s("div",{class:"text-block"},[s("div",{class:"text"},"冲淤图展示")],-1)),Ma={class:"bankLine-control-block"},Ua={class:"switch"},Fa=["checked"],Da=R(()=>s("span",{class:"slider"},null,-1)),Ba=R(()=>s("div",{class:"text-block"},[s("div",{class:"text"},"岸段展示")],-1)),Na={class:"terrain-control-block"},Ia={class:"switch"},za=["checked"],Va=R(()=>s("span",{class:"slider"},null,-1)),Oa=R(()=>s("div",{class:"text-block"},[s("div",{class:"text"},"三维地形")],-1)),Xa=bt('<div class="risk-line-container" data-v-0bb7a413><div class="risk-line-title" data-v-0bb7a413>风险等级图例：</div><div class="risk-line" data-v-0bb7a413></div><div class="risk-line-arrow high" data-v-0bb7a413><img src="'+ua+'" alt="图例标记" data-v-0bb7a413></div><div class="risk-line-mark low" data-v-0bb7a413>低风险</div><div class="risk-line-mark middle" data-v-0bb7a413>中风险</div><div class="risk-line-mark high" data-v-0bb7a413>高风险</div></div>',1),Ga={key:1,class:"warn-status-container"},Ja=R(()=>s("div",{class:"warn-status-title"},"民主沙右缘风险评估结果",-1)),Wa=R(()=>s("div",{class:"warn-status-content high"},"高风险",-1)),$a=[Ja,Wa],Ha={key:2,class:"warn-detail-container high"},ja={class:"warn-detail-profile"},Ya={class:"warn-detail-text"},Za=R(()=>s("span",{class:"warn-detail-span"},null,-1)),ga={class:"warn-detail-span"},qa={key:8,style:{position:"absolute",top:"16.25vh",left:"0.3vw",width:"26vw",height:"23.5vh","z-index":"10"}},Ka={key:10,class:"flow-control-block"},Qa={class:"switch",style:{transform:"rotateZ(90deg)"}},eo=["checked"],to=R(()=>s("span",{class:"slider"},null,-1)),ao=R(()=>s("div",{class:"text-block"},[s("div",{class:"text"},"流场展示")],-1)),oo={key:11,class:"time-shower-block"},ro={key:12,style:{position:"absolute",top:"66vh",left:"0.3vw",width:"26vw",height:"25vh","z-index":"10"}},io={key:14,class:"drag riskResult"},no={key:15,class:"raster-legend-container"},so=R(()=>s("img",{src:da,alt:"比例尺"},null,-1)),lo=[so],co=R(()=>s("span",null,"确认使用此断面进行计算",-1)),uo={class:"dialog-footer"},ho={style:{"text-align":"right"}},vo=R(()=>s("span",null,"确认使用以下年份地形数据进行计算：",-1)),fo={style:{position:"absolute",top:"6.5vh","font-weight":"bold"}},mo={style:{position:"absolute",top:"8.5vh","font-weight":"bold"}},po={class:"dialog-footer"},xo={style:{"text-align":"right"}},yo={class:"loading-container"},bo={class:"loading-message"},_o={class:"hydro-pannel"},To={class:"title"},wo={__name:"BankRiskWarnView",setup(t){const e="http://119.45.198.54:80/tileServer";n(-1);const o=X(()=>G(()=>import("./riskResult-CpMJwEZK.js"),__vite__mapDeps([0,1,2,3]))),c=X(()=>G(()=>import("./flowspeedInfo-C7Nzm5cL.js"),__vite__mapDeps([4,1,2,5,6]))),r=X(()=>G(()=>import("./profileInfo-t4YVTjnh.js"),__vite__mapDeps([7,5,1,2,8]))),l=X(()=>G(()=>import("./profileShapeCompare-JGOHP-ju.js"),__vite__mapDeps([9,5,1,2,10]))),m=X(()=>G(()=>import("./profileSlope-MiAQ4P11.js"),__vite__mapDeps([11,5,1,2,12]))),v=X(()=>G(()=>import("./profileErosion-CSbB5PRL.js"),__vite__mapDeps([13,5,1,2,14]))),y=X(()=>G(()=>import("./BedFlowChart-BXPX5_FK.js"),__vite__mapDeps([15,1,2,16]))),C=X(()=>G(()=>import("./WaterProcessChart-BWwj9hzc.js"),__vite__mapDeps([17,1,2,18]))),ee=X(()=>G(()=>import("./GeologyAndProject-C55FAzyy.js"),__vite__mapDeps([19,1,2,20]))),b=n("自定义断面信息计算中..."),U=n(),F=n(0),x=n(!1);n(0);const S=n(!1),_=n(!1),z=n(!0),Z=n(!1);n(ba);const J=n("洪季"),_t=[{station:"大通站",flow:"N/A",level:"N/A"},{station:"南京站",flow:"N/A",level:"N/A"},{station:"镇江站",flow:"N/A",level:"N/A"},{station:"三江营站",flow:"N/A",level:"N/A"},{station:"江阴站",flow:"N/A",level:"N/A"},{station:"徐六泾站",flow:"N/A",level:"N/A"}],Tt=a=>{J.value=a,console.log(J.value),S.value=!1,F.value=0;let i=he().getMap();i.getLayer("floodFlow")&&(i.removeLayer("floodFlow"),ae&&(ae(),ae=null)),i.getLayer("dryFlow")&&(i.removeLayer("dryFlow"),oe&&(oe(),oe=null))},wt=a=>{a&&a.fitBounds([[120.43987922676835,32.03201616423072],[120.59089640208263,32.05217136261862]],{duration:1500})},p=n(xa),te=n(ya);let Lt=Oe;n([{value:"low",label:"低风险"},{value:"middle",label:"中风险"},{value:"high",label:"高风险"}]),n("mzs");const Xe=()=>{re=te.value.find(a=>a.value===be.value),ie=te.value.find(a=>a.value===_e.value),ke=te.value.find(a=>a.value===Mt.value),Me=te.value.find(a=>a.value===Ut.value)},Et=a=>{let i="";return p.value.map(h=>{h.risk===a&&(i=i+h.name+"; ")}),i},St=()=>{Se.value=!1},Rt=async()=>{if(Xe(),Se.value=!1,ie.dateShort<=re.dateShort){Ae.error("当前地形时间不能早于或等于对比地形时间！");return}if(He.value===be.value&&je.value===_e.value){Ae.error("当前地形时间与对比地形时间未发生变化！");return}b.value="冲淤图层加载中...",ue.value=!0,le.value=!0,ce.value=!0,Ne.value=!0;const a=ie.dateShort+re.dateShort;_.value||(_.value=!0),T.removeLayer("mapRaster"),T.removeSource("mapRaster"),it(T,a,"mapRaster"),T.moveLayer("mapRaster","mzsLine"),Ge(re,ie,ke,Me)},xe=a=>{T.setFilter("mzsBankLineChoosen",p.value[a-1].filter)},Ge=async(a,i,h,u)=>{const f=a.date,d=i.date,B=h.date,V=u.date;b.value="确认计算结果是否存在...",ue.value=!0;let de,j;de=await Je(f,d),j=await Je(B,V),de&&j?(b.value="地形对比数据加载中...",D.value=await W(f,d),me.value=await W(B,V)):de&&!j?(b.value="地形对比数据加载中...",await ye(B,V),b.value="地形对比数据加载中...",D.value=await W(f,d),me.value=await W(B,V)):!de&&j?(b.value="地形对比数据加载中...",await ye(f,d),b.value="地形对比数据加载中...",D.value=await W(f,d),me.value=await W(B,V)):(b.value="地形对比数据加载中...",await ye(B,V),await ye(f,d),b.value="地形对比数据加载中...",D.value=await W(f,d),me.value=await W(B,V)),ue.value=!1,le.value=!1,Le.value=!1,ce.value=!1,Ne.value=!1,Ht(),At(D.value),T.getLayer("mzsBankLineLowRisk")!==void 0&&T.removeLayer("mzsBankLineLowRisk"),nt(T,p),Te.value=!0,He.value=be.value,je.value=_e.value},Je=async(a,i)=>{const h=[];let u=!0;try{for(let d=0;d<12;d++)h.push(Q.getProfileData(a,i,d+1));(await Promise.all(h)).forEach(d=>{(!d||!d.data||d.data.length===0)&&(u=!1)})}catch{u=!1}return u},W=async(a,i)=>{const h=[],u=[];for(let d=0;d<12;d++)h.push(Q.getProfileData(a,i,d+1));return(await Promise.all(h)).forEach(d=>{d&&d.data&&u.push(d.data)}),u},ye=async(a,i)=>{const h=[];for(let u=0;u<p.value.length;u++)h.push(Ct(a,i,u));await Promise.all(h)},Ct=async(a,i,h)=>{const u=await Q.runProfileModel_long(a,i,h+1);let f;for(;;){try{f=await Q.getRunStatus(u.data)}catch{}if(f.data==2)break;if(f.data==-1)return;if(f.data==-2)return;f.data==1,await rt(100)}},At=a=>{a.map((i,h)=>{p.value[h].risk==="low"?p.value[h].color="rgb(31, 110, 209)":p.value[h].risk==="middle"?p.value[h].color="rgb(220, 126, 37)":p.value[h].color="rgb(250, 55, 36)";try{p.value[h].flowspeed=i.deepestPoint[2]}catch{}}),he().getMap()};let ae=null,oe=null;const We=async()=>{S.value=!S.value;let a=he().getMap();if(F.value=0,S.value){if(J.value=="洪季"){let i="/api/data/flow/configJson/flood",h="/api/data/flow/texture/flood/",u=ut(new ht("floodFlow",i,h));a.addLayer(u,"chaoWeiPointLable"),ae=dt(()=>u._progressRate,f=>{let d=parseFloat((u.timeCount/u.timePerFrame).toFixed(1));F.value=d}),console.log("add 洪季")}else if(J.value=="枯季"){let i="/api/data/flow/configJson/dry",h="/api/data/flow/texture/dry/",u=ut(new ht("dryFlow",i,h));a.addLayer(u,"chaoWeiPointLable"),oe=dt(()=>u._progressRate,f=>{let d=parseFloat((u.timeCount/u.timePerFrame).toFixed(1));F.value=d}),console.log("add 枯季")}}else J.value=="洪季"?a.getLayer("floodFlow")&&(a.removeLayer("floodFlow"),ae(),ae=null):J.value=="枯季"&&a.getLayer("dryFlow")&&(a.removeLayer("dryFlow"),oe(),oe=null)},$e=()=>{_.value&&g.value?(T.setLayoutProperty("mapRaster","visibility","none"),_.value=!_.value):!_.value&&g.value?(T.setLayoutProperty("mapRaster","visibility","visible"),_.value=!_.value):_.value&&!g.value?(T.setLayoutProperty("mapRaster","visibility","none"),_.value=!_.value):T.setLayoutProperty("mapRaster","visibility","none")},Pt=()=>{z.value?T.setLayoutProperty("岸段预警","visibility","none"):T.setLayoutProperty("岸段预警","visibility","visible"),z.value=!z.value},kt=()=>{Z.value?T.setLayoutProperty("TerrainLayer","visibility","none"):T.setLayoutProperty("TerrainLayer","visibility","visible"),Z.value=!Z.value},be=n("2019before"),_e=n("2023before1"),Mt=n("1999before"),Ut=n("2012after"),He=n("2019before"),je=n("2023before1");n("2012after"),n("2012after");let re,ie,ke,Me;const Te=n(!1),Ye=n(!1),Ze=n(!1),ge=()=>{Ze.value=!Ze.value},ne=n(!1),qe=()=>{ne.value=!ne.value},Ke=n(!1),Qe=n(!1),et=n(!1),Ue=n(!1),Ft=()=>{Ue.value=!Ue.value},Fe=n(!1),Dt=()=>{Fe.value=!Fe.value},$=n(!1),Bt=async()=>{if(S.value===!1&&$.value===!0){$.value=!1;return}$.value=!$.value,F.value=0,await We()},g=n(!1),tt=()=>{$e(),g.value=!g.value},se=n(!1),we=async()=>{H.value===!0?De():q.value===!0&&Be(),Ft(),Dt(),await Bt(),T.setLayoutProperty("mapRaster","visibility","none"),se.value=!se.value},H=n(!1),De=()=>{if(se.value===!0?we():q.value===!0&&Be(),_.value===!1&&ne.value===!0||_.value===!0&&ne.value===!1){qe(),ge(),tt(),H.value=!H.value;return}qe(),ge(),tt(),H.value=!H.value},q=n(!1),Be=()=>{se.value===!0?we():H.value===!0&&De(),T.setLayoutProperty("mapRaster","visibility","none"),q.value=!q.value},D=n([]),me=n([]);n(0),n([]);const at=n(null),Nt=n(null),ot=n(!0),le=n(!0),Le=n(!0),ce=n(!0),Ne=n(!0),K=n(""),It=n("");n(""),n("");let T;const Ee=n(!1),Se=n(!1);n(""),n("");const ue=n(!1);let zt,Vt,Ot,Xt;new oa({displayControlsDefault:!1,controls:{line_string:!0,trash:!0},styles:[{id:"gl-draw-line",type:"line",filter:["all",["==","$type","LineString"],["==","mode","draw_line_string"]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#D20C0C","line-dasharray":[.2,2],"line-width":2}},{id:"gl-draw-polygon-and-line-vertex-halo-active",type:"circle",filter:["all",["==","meta","vertex"],["==","$type","Point"],["==","mode","draw_line_string"]],paint:{"circle-radius":5,"circle-color":"#FFF"}},{id:"gl-draw-polygon-and-line-vertex-active",type:"circle",filter:["all",["==","meta","vertex"],["==","$type","Point"],["==","mode","draw_line_string"]],paint:{"circle-radius":3,"circle-color":"#D20C0C"}},{id:"gl-draw-line-static",type:"line",filter:["all",["==","$type","LineString"],["!=","mode","draw_line_string"]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#000","line-width":3}}]});const Gt=()=>{Ee.value=!1},Jt=async()=>{if(K.value===""){Ae.error("断面名称不为空！");return}else if(p.value.find(d=>d.name===K.value)){Ae.error("断面名称已存在！");return}ue.value=!0,ot.value=!0,le.value=!0,Le.value=!0,ce.value=!0,b.value="自定义断面信息计算中...",Ee.value=!1;const a=te.value.find(d=>d.value==be.value).date,i=te.value.find(d=>d.value==_e.value).date,h=await Wt(a,i,zt,Vt,Ot,Xt);let u="";for(;;){try{u=await Q.getRunStatus(h.data)}catch{}if(u.data==2)break;if(u.data==-1)return;if(u.data==-2)return;u.data==1,await rt(500)}const f=await Q.getRunResult(h.data);$t(f.data),D.value.push(f.data),ue.value=!1,ot.value=!1,le.value=!1,Le.value=!1,ce.value=!1};async function rt(a){return new Promise(i=>setTimeout(i,a))}const Wt=async(a,i,h,u,f,d)=>await Q.runProfileModelByLine(a,i,h,u,f,d),$t=a=>{let i;a.risk[2]<.25?i="low":a.risk[2]<.5?i="middle":i="high",It.value=i,at.value={value:p.value.length+1,label:K.value,name:K.value,filter:["==","$type",`${K.value}`],flowspeed:a.deepestPoint[2],risk:i},Nt.value=a,p.value.push(at.value)},it=(a,i,h)=>{a.addSource(h,{type:"raster",tiles:[e+`/tile/raster/mzs/flood/${i}/{x}/{y}/{z}`],tileSize:256,minzoom:10,maxzoom:20,bounds:[120.109,31.823,120.855,32.102]});let u=mt[i].min,f=mt[i].max;a.addLayer({id:h,type:"raster",source:h,paint:{"raster-color":["interpolate",["linear"],["raster-value"],-10-u,"rgba(0,0,255,1)",0-u,"rgba(255, 255, 255, 1)",10-u,"rgba(255, 0, 0, 1)"],"raster-color-mix":[f-u,0,0,0],"raster-opacity":.85,"raster-color-range":[-30,30]}})},Ht=()=>{for(let a=0;a<12;a++)Oe[a].warnValue<.25?p.value[a].risk="low":Oe[a].warnValue<.5?p.value[a].risk="middle":p.value[a].risk="high"},nt=(a,i)=>{a.addLayer({id:"mzsBankLineLowRisk",type:"line",source:"mzsBankLineSource","source-layer":"default",layout:{"line-cap":"round","line-join":"round"},paint:{"line-opacity":1,"line-color":["match",["get","name"],"JC01",`${i.value[0].color}`,"JC02",`${i.value[1].color}`,"JC03",`${i.value[2].color}`,"JC04",`${i.value[3].color}`,"JC05",`${i.value[4].color}`,"JC06",`${i.value[5].color}`,"JC07",`${i.value[6].color}`,"JC08",`${i.value[7].color}`,"JC09",`${i.value[8].color}`,"JC10",`${i.value[9].color}`,"JC11",`${i.value[10].color}`,"JC12",`${i.value[11].color}`,"rgb(255, 255, 255)"],"line-width":3}},"mzsSectionLabelLayer")};return xt(async()=>{await Kt(U.value).then(async a=>{T=a,wt(a),a.addSource("mzsPlaceLabelSource",{type:"vector",tiles:[e+"/tile/vector/mzsPlaceLabel/{x}/{y}/{z}"]}),a.addSource("mzsPlaceLineSource",{type:"vector",tiles:[e+"/tile/vector/mzsPlaceLine/{x}/{y}/{z}"]}),a.addSource("mzsBankAreaSSource",{type:"vector",tiles:[e+"/tile/vector/mzsBankAreaOne/{x}/{y}/{z}"]}),a.addSource("mzsBankLineSource",{type:"vector",tiles:[e+"/tile/vector/mzsBankLine/{x}/{y}/{z}"]}),a.addSource("dockAreaSource",{type:"vector",tiles:[e+"/tile/vector/dockArea/{x}/{y}/{z}"]}),a.addSource("dockAreaLabelSource",{type:"vector",tiles:[e+"/tile/vector/center/dockArea/{x}/{y}/{z}"]}),a.addSource("fixProjectAreaSource",{type:"vector",tiles:[e+"/tile/vector/fixProjectArea/{x}/{y}/{z}"]}),a.addSource("fixProjectLineSource",{type:"vector",tiles:[e+"/tile/vector/fjsFixLine/{x}/{y}/{z}"]}),a.addSource("fixProjectAreaLabelSource",{type:"vector",tiles:[e+"/tile/vector/center/fixProjectArea/{x}/{y}/{z}"]}),a.addSource("riverPlaceLabel",{type:"vector",tiles:[e+"/tile/vector/placeLabel/{x}/{y}/{z}"]}),a.addSource("riverBeachSource",{type:"vector",tiles:[e+"/tile/vector/riverBeach/{x}/{y}/{z}"]}),a.addSource("zjgLine",{type:"vector",tiles:[e+"/tile/vector/zjgBridgeLine/{x}/{y}/{z}"]}),a.addLayer({id:"riverBeachArea",type:"fill",source:"riverBeachSource","source-layer":"default",paint:{"fill-color":"rgba(210,244,247, 1)"}}),a.addLayer({id:"zjgBridge",type:"line",source:"zjgLine","source-layer":"default",layout:{"line-cap":"round","line-join":"round"},paint:{"line-opacity":.6,"line-color":"rgb(183, 189, 183)","line-width":2}}),it(a,23032209,"mapRaster"),a.setLayoutProperty("mapRaster","visibility","none"),a.addLayer(new ia(14)),a.setLayoutProperty("TerrainLayer","visibility","none"),a.addLayer({id:"mzsLine",type:"line",source:"mzsPlaceLineSource","source-layer":"default",layout:{"line-cap":"round","line-join":"round"},paint:{"line-opacity":1,"line-color":"rgba(26, 87, 138, 0.6)","line-width":2}}),a.addLayer({id:"fjsFixLine",type:"line",source:"fixProjectLineSource","source-layer":"default",layout:{"line-cap":"round","line-join":"round"},paint:{"line-opacity":1,"line-color":"rgba(216, 217, 228, 0.5)","line-width":4}}),a.addLayer({id:"fixProjectFillLayer",type:"fill",source:"fixProjectAreaSource","source-layer":"default",paint:{"fill-color":"rgba(220,224,237, 0.8)","fill-outline-color":"rgba(220,224,237, 0.8)"}}),a.addLayer({id:"fixProjectAreaLabel",type:"symbol",source:"fixProjectAreaLabelSource","source-layer":"default",layout:{"text-field":["get","layer"],"text-font":["Open Sans Semibold","Arial Unicode MS Bold"],"text-anchor":"right","text-size":12},paint:{"text-color":"rgba(31, 44, 126, 0.6)"}}),a.addLayer({id:"mzsLabel",type:"symbol",source:"mzsPlaceLabelSource","source-layer":"default",layout:{"text-field":["get","label"],"text-font":["Open Sans Semibold","Arial Unicode MS Bold"],"text-anchor":"left"},paint:{"text-color":"rgba(31, 14, 126, 0.75)"}}),a.addLayer({id:"dockArea",type:"fill",source:"dockAreaSource","source-layer":"default",paint:{"fill-color":"rgb(172,214,239)"}}),a.addLayer({id:"dockAreaLabel",type:"symbol",source:"dockAreaLabelSource","source-layer":"default",layout:{"text-field":["get","project_name"],"text-font":["Open Sans Semibold","Arial Unicode MS Bold"],"text-anchor":"bottom","text-size":12},paint:{"text-color":"rgba(31, 44, 126, 0.6)"}}),a.addLayer({id:"riverPlaceLabel",type:"symbol",source:"riverPlaceLabel","source-layer":"default",layout:{"text-field":["get","label"],"text-font":["Open Sans Semibold","Arial Unicode MS Bold"],"text-anchor":"left","text-size":18},paint:{"text-color":"rgba(31, 44, 226, 1)"}}),a.addSource("mzsSectionLabel",{type:"vector",tiles:[e+"/tile/vector/geomCenter/mzsBankLine/{x}/{y}/{z}"]});const i={type:"FeatureCollection",features:[{type:"Feature",properties:{label:"潮位点"},geometry:{type:"Point",coordinates:[120.522864,32.035502]}}]};a.addSource("chaoWeiPoint",{type:"geojson",data:i}),a.addLayer({id:"chaoWeiPoint",type:"circle",source:"chaoWeiPoint",paint:{"circle-radius":7,"circle-color":"rgb(255, 0,0)"}}),a.addLayer({id:"chaoWeiPointLable",type:"symbol",source:"chaoWeiPoint",layout:{"text-field":["get","label"],"text-font":["Open Sans Semibold","Arial Unicode MS Bold"],"text-anchor":"top","text-offset":[0,.5],"text-size":18,"text-allow-overlap":!0},paint:{"text-color":"rgb(255,255,255)"}},"chaoWeiPoint"),a.addLayer(new pa(Lt),"chaoWeiPoint"),a.addLayer({id:"mzsBankLineChoosen",type:"line",source:"mzsBankLineSource","source-layer":"default",filter:p.value[1].filter,layout:{"line-cap":"round","line-join":"round"},paint:{"line-opacity":1,"line-color":"rgb(134, 245, 230)","line-width":10}},"chaoWeiPoint"),a.addLayer({id:"mzsSectionLabelLayer-important",type:"symbol",source:"mzsSectionLabel","source-layer":"default",maxzoom:12,minzoom:8,filter:["==","label","MZ08海事码头"],layout:{"text-field":["get","label"],"text-font":["Open Sans Semibold","Arial Unicode MS Bold"],"text-offset":[-1,1.15],"text-anchor":"top","text-size":18,"text-allow-overlap":!0},paint:{"text-color":"rgb(100, 2, 125)"}},"chaoWeiPoint"),a.addLayer({id:"mzsSectionLabelLayer",type:"symbol",source:"mzsSectionLabel","source-layer":"default",maxzoom:22,minzoom:12,layout:{"text-field":["get","label"],"text-font":["Open Sans Semibold","Arial Unicode MS Bold"],"text-offset":[-1,1.15],"text-anchor":"top","text-size":18,"text-allow-overlap":!0},paint:{"text-color":"rgb(0, 22, 145)"}},"chaoWeiPoint"),he().setMap(a)}),Xe(),Te.value=!1,Ye.value=!1,ne.value=!1,Ke.value=!1,Qe.value=!1,et.value=!1,$.value=!1,await Ge(re,ie,ke,Me),we()}),Qt(()=>{he().getMap().remove(),he().destroyMap()}),(a,i)=>{const h=I("dv-border-box-12"),u=I("el-input"),f=I("el-button"),d=I("el-dialog"),B=I("dv-loading"),V=I("More"),de=I("el-icon"),j=I("el-table-column"),jt=I("el-table"),Yt=ea("draggable");return w(),M("div",_a,[s("div",{class:"map-container",id:"map",ref_key:"mapContainer",ref:U},null,512),Ta,s("div",wa,[s("div",{class:Ie(["risk-item",{active:se.value}])},[s("div",{class:"risk-main-index waterpower",onClick:we},[se.value?(w(),O(h,{key:0})):L("",!0),La])],2),s("div",{class:Ie(["risk-item",{active:H.value}])},[s("div",{class:"risk-main-index riverbed",onClick:De},[H.value?(w(),O(h,{key:0,color:["rgb(73, 164, 101)","#9cf3e0"]})):L("",!0),Ea])],2),s("div",{class:Ie(["risk-item",{active:q.value}])},[s("div",{class:"risk-main-index bankGeology",onClick:Be},[q.value?(w(),O(h,{key:0,color:["rgb(153, 143, 199)","rgb(231, 161, 240)"]})):L("",!0),Sa])],2)]),g.value?(w(),M("div",Ra,[s("label",Ca,[s("input",{type:"checkbox",checked:_.value,onClick:i[0]||(i[0]=N=>$e())},null,8,Aa),Pa]),ka])):L("",!0),s("div",Ma,[s("label",Ua,[s("input",{type:"checkbox",checked:z.value,onClick:i[1]||(i[1]=N=>Pt())},null,8,Fa),Da]),Ba]),s("div",Na,[s("label",Ia,[s("input",{type:"checkbox",checked:Z.value,onClick:i[2]||(i[2]=N=>kt())},null,8,za),Va]),Oa]),Xa,Te.value?(w(),M("div",Ga,$a)):L("",!0),Te.value?(w(),M("div",Ha,[s("div",ja,[s("div",Ya,[Za,ve(" 高风险区域集中在： "),s("span",ga,pe(Et("high")),1)])])])):L("",!0),Ye.value?(w(),O(P(r),{key:3,onProfileValueChange:xe,profileData:D.value,profileList:p.value,shapeChartLoad:le.value,erosionChartLoad:ce.value},null,8,["profileData","profileList","shapeChartLoad","erosionChartLoad"])):L("",!0),L("",!0),ne.value?(w(),O(P(l),{key:5,onProfileValueChange:xe,profileData:D.value,profileDataCompare:me.value,profileList:p.value,shapeChartLoad:le.value},null,8,["profileData","profileDataCompare","profileList","shapeChartLoad"])):L("",!0),Ke.value?(w(),O(P(m),{key:6,onProfileValueChange:xe,profileData:D.value,profileList:p.value,slopeChartLoad:Le.value},null,8,["profileData","profileList","slopeChartLoad"])):L("",!0),Qe.value?(w(),O(P(v),{key:7,onProfileValueChange:xe,profileData:D.value,profileList:p.value,slopeChartLoad:ce.value},null,8,["profileData","profileList","slopeChartLoad"])):L("",!0),Ue.value?(w(),M("div",qa,[E(P(y))])):L("",!0),$.value?(w(),O(P(c),{key:9,profileList:p.value,flowspeedChartLoad:Ne.value,type:J.value,onConditionChange:Tt},null,8,["profileList","flowspeedChartLoad","type"])):L("",!0),$.value?(w(),M("div",Ka,[s("label",Qa,[s("input",{type:"checkbox",checked:S.value,onClick:i[3]||(i[3]=N=>We())},null,8,eo),to]),ao])):L("",!0),$.value?(w(),M("div",oo,[E(ma,{type:"exp","time-step":F.value,"total-count":25},null,8,["time-step"])])):L("",!0),Fe.value?(w(),M("div",ro,[E(P(C),{timeStep:F.value,type:J.value},null,8,["timeStep","type"])])):L("",!0),q.value?(w(),O(P(ee),{key:13})):L("",!0),et.value?ze((w(),M("div",io,[E(P(o),{profileList:p.value},null,8,["profileList"])])),[[Yt,{bounds:"body",cancel:"div.content"}]]):L("",!0),_.value&&g.value?(w(),M("div",no,lo)):L("",!0),E(d,{modelValue:Ee.value,"onUpdate:modelValue":i[5]||(i[5]=N=>Ee.value=N),title:"绘制断面确认",width:"40vh"},{footer:A(()=>[s("div",uo,[s("div",ho,[E(f,{onClick:Gt},{default:A(()=>[ve("取消")]),_:1}),E(f,{type:"primary",onClick:Jt},{default:A(()=>[ve(" 确认 ")]),_:1})])])]),default:A(()=>[co,E(u,{modelValue:K.value,"onUpdate:modelValue":i[4]||(i[4]=N=>K.value=N),style:{width:"240px","margin-bottom":"10px","margin-left":"2vw"},placeholder:"请输入断面名称",clearable:""},null,8,["modelValue"])]),_:1},8,["modelValue"]),E(d,{modelValue:Se.value,"onUpdate:modelValue":i[6]||(i[6]=N=>Se.value=N),title:"切换场景确认",width:"40vh"},{footer:A(()=>[s("div",po,[s("div",xo,[E(f,{onClick:St},{default:A(()=>[ve("取消")]),_:1}),E(f,{type:"primary",onClick:Rt},{default:A(()=>[ve(" 确认 ")]),_:1})])])]),default:A(()=>[vo,s("div",fo,pe(P(re).name),1),s("div",mo,pe(P(ie).name),1)]),_:1},8,["modelValue"]),ze(s("div",yo,[E(B,{class:"loading-icon"},{default:A(()=>[s("div",bo,pe(b.value),1)]),_:1})],512),[[ct,ue.value]]),s("div",_o,[s("div",To,[ve(" 实时水文信息 "),E(de,{onClick:i[7]||(i[7]=N=>x.value=!x.value),style:{"margin-left":"50%"},class:"iconn"},{default:A(()=>[E(V)]),_:1})]),ze(E(jt,{data:_t,border:"",style:{width:"15vw"}},{default:A(()=>[E(j,{prop:"station",label:"站点"}),E(j,{prop:"flow",label:"流量"}),E(j,{prop:"level",label:"水位"})]),_:1},512),[[ct,x.value]])])])}}},Co=yt(wo,[["__scopeId","data-v-0bb7a413"]]);export{Co as default};
